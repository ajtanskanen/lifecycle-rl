'''

    empstats.py

    statistics to be compared againt simulation results

'''

import numpy as np
from scipy.interpolate import interp1d

class Empstats(): 
    def __init__(self,year=2018,max_age=70,n_groups=6,timestep=0.25,n_time=210,min_age=18,include_perustulo=False):
        self.year=year
        self.max_age=max_age
        self.n_groups=n_groups
        self.timestep=timestep
        self.n_time=n_time
        self.min_age=min_age
        self.inv_timestep=int(np.round(1/self.timestep)) # pitää olla kokonaisluku
        self.include_perustulo = include_perustulo

    def emp_stats(self,g=0,tyossakayntitutkimus=True):
        if tyossakayntitutkimus:
            return self.emp_stats_tyossakayntitutkimus(g=g)
        else:
            return self.emp_stats_tyovoimatutkimus(g=g)
        
    def emp_stats_tyossakayntitutkimus(self,g=0):
        '''
        työssä olevien osuus väestöstö
        Lähde: Tilastokeskus, työssäkäyntitutkimus
        '''
        if self.year==2018:
            if g==0: # kaikki
                emp=np.array([0.299,0.455,0.464,0.548,0.569,0.602,0.649,0.682,0.709,0.732,0.743,0.755,0.761,0.772,0.779,0.784,0.791,0.798,0.806,0.811,0.812,0.824,0.824,0.833,0.835,0.837,0.836,0.832,0.832,0.829,0.825,0.821,0.819,0.816,0.811,0.806,0.799,0.791,0.776,0.766,0.753,0.730,0.686,0.630,0.568,0.382,0.218,0.143,0.108,0.088,0.012,0.003,0.002,0.002,0.001,0.001,0.000,0.000])
            elif g==1: # naiset
                emp=np.array([0.344,0.531,0.556,0.569,0.587,0.623,0.669,0.688,0.705,0.726,0.729,0.737,0.744,0.751,0.756,0.766,0.772,0.780,0.792,0.797,0.801,0.817,0.821,0.832,0.836,0.839,0.840,0.839,0.837,0.840,0.836,0.835,0.831,0.831,0.828,0.825,0.819,0.815,0.802,0.794,0.782,0.761,0.715,0.665,0.596,0.401,0.222,0.137,0.100,0.082,0.012,0.004,0.003,0.002,0.001,0.001,0.001,0.000])
            else: # miehet
                emp=np.array([0.257,0.384,0.377,0.527,0.553,0.582,0.629,0.676,0.713,0.737,0.755,0.772,0.777,0.792,0.801,0.802,0.808,0.815,0.818,0.823,0.823,0.830,0.828,0.835,0.834,0.835,0.833,0.825,0.826,0.817,0.815,0.807,0.807,0.801,0.793,0.786,0.780,0.768,0.750,0.738,0.724,0.698,0.655,0.594,0.539,0.362,0.214,0.149,0.116,0.095,0.012,0.002,0.002,0.001,0.001,0.001,0.000,0.000])
        elif self.year==2019:
            if g==0: # kaikki
                emp=np.array([0.290,0.453,0.462,0.534,0.558,0.591,0.633,0.678,0.708,0.721,0.741,0.751,0.758,0.762,0.769,0.778,0.782,0.788,0.796,0.804,0.808,0.812,0.822,0.824,0.833,0.834,0.835,0.834,0.828,0.830,0.826,0.824,0.818,0.815,0.810,0.805,0.797,0.789,0.782,0.767,0.752,0.732,0.698,0.647,0.591,0.455,0.239,0.156,0.115,0.089,0.028,0.017,0.013])
            elif g==1: # naiset
                emp=np.array([0.360,0.552,0.563,0.570,0.592,0.621,0.658,0.698,0.717,0.720,0.733,0.737,0.737,0.745,0.743,0.754,0.761,0.769,0.778,0.790,0.795,0.802,0.815,0.819,0.831,0.834,0.838,0.840,0.835,0.835,0.838,0.834,0.832,0.829,0.827,0.825,0.816,0.809,0.808,0.794,0.782,0.762,0.731,0.680,0.627,0.486,0.255,0.162,0.118,0.088,0.022,0.011,0.008])
            else: # miehet
                emp=np.array([0.242,0.375,0.380,0.512,0.536,0.572,0.616,0.665,0.704,0.726,0.751,0.767,0.778,0.780,0.794,0.800,0.801,0.806,0.813,0.817,0.820,0.820,0.826,0.827,0.833,0.831,0.830,0.827,0.818,0.822,0.812,0.810,0.802,0.798,0.792,0.783,0.775,0.767,0.754,0.738,0.722,0.700,0.665,0.613,0.555,0.426,0.224,0.153,0.114,0.091,0.031,0.021,0.016]) #,0.013,0.013,0.010,0.009])
        elif self.year==2020:
            if g==0: # kaikki
                emp=np.array([0.245,0.386,0.407,0.479,0.508,0.549,0.596,0.639,0.669,0.693,0.705,0.718,0.726,0.733,0.737,0.746,0.752,0.757,0.764,0.771,0.779,0.784,0.788,0.796,0.798,0.806,0.806,0.809,0.806,0.799,0.802,0.799,0.795,0.788,0.786,0.781,0.773,0.766,0.758,0.751,0.732,0.712,0.681,0.641,0.591,0.510,0.253,0.168,0.130,0.103,0.028,0.019,0.014])
            elif g==1: # naiset
                emp=np.array([0.27872191,0.46668750,0.48756461,0.50132780,0.52822940,0.57162008,0.61447015,0.65207289,0.68104614,0.69525622,0.70121260,0.71138351,0.71381848,0.71475391,0.72094158,0.72665638,0.73495882,0.74518506,0.75162681,0.76311857,0.77124827,0.77934887,0.78740274,0.79854477,0.80289148,0.81486582,0.81750220,0.82029935,0.81995946,0.81281520,0.81818485,0.81812944,0.81284700,0.81025139,0.80748693,0.80556559,0.79804479,0.79377046,0.78685377,0.78187075,0.76494694,0.74941560,0.71813946,0.67638075,0.62580700,0.54105315,0.27132156,0.17227402,0.13269015,0.10598192,0.02379934,0.01511777,0.01067221])
            else: # miehet
                emp=np.array([0.21306,0.30980,0.33169,0.45898,0.48906,0.52810,0.57858,0.62573,0.65848,0.69003,0.70925,0.72497,0.73741,0.75003,0.75144,0.76318,0.76760,0.76879,0.77565,0.77819,0.78536,0.78856,0.78862,0.79349,0.79324,0.79770,0.79597,0.79775,0.79330,0.78512,0.78726,0.78086,0.77734,0.76691,0.76425,0.75676,0.74717,0.73830,0.72995,0.71938,0.69883,0.67368,0.64220,0.60415,0.55399,0.47704,0.23441,0.16352,0.12737,0.10055,0.03328,0.02310,0.01728])
        elif self.year==2021: 
            if g==0: # kaikki
                emp=np.array([0.307,0.439,0.455,0.515,0.540,0.571,0.624,0.667,0.702,0.726,0.738,0.745,0.751,0.756,0.761,0.763,0.774,0.778,0.786,0.791,0.800,0.807,0.812,0.816,0.826,0.826,0.835,0.833,0.833,0.832,0.826,0.826,0.824,0.817,0.811,0.808,0.801,0.792,0.782,0.776,0.763,0.741,0.712,0.666,0.619,0.558,0.279,0.178,0.131,0.104,0.031,0.020,0.017])
            elif g==1: # naiset
                emp=np.array([0.3588,0.525,0.522,0.528,0.548,0.582,0.635,0.676,0.703,0.725,0.728,0.727,0.732,0.732,0.732,0.738,0.744,0.754,0.765,0.773,0.786,0.796,0.806,0.810,0.824,0.828,0.841,0.841,0.838,0.840,0.835,0.836,0.837,0.832,0.828,0.825,0.822,0.816,0.807,0.800,0.790,0.769,0.746,0.700,0.651,0.587,0.293,0.181,0.132,0.103,0.027,0.017,0.012])
            else: # miehet
                emp=np.array([0.213,0.310,0.332,0.459,0.489,0.528,0.579,0.626,0.658,0.690,0.709,0.725,0.737,0.750,0.751,0.763,0.768,0.769,0.776,0.778,0.785,0.789,0.789,0.793,0.793,0.798,0.796,0.798,0.793,0.785,0.787,0.781,0.777,0.767,0.764,0.757,0.747,0.738,0.730,0.719,0.699,0.674,0.642,0.604,0.554,0.477,0.234,0.164,0.127,0.101,0.033,0.023,0.017])
        elif self.year==2022:
            if g==0: # kaikki
                emp=np.array([0.33157,0.46463,0.47919,0.53248,0.55792,0.59217,0.63085,0.67828,0.71210,0.73084,0.74641,0.75196,0.75672,0.76349,0.76708,0.77465,0.77761,0.78310,0.78955,0.79837,0.80351,0.81024,0.81580,0.81976,0.82487,0.83274,0.83191,0.83934,0.83952,0.83764,0.83863,0.82989,0.82981,0.82626,0.82183,0.81390,0.80906,0.80367,0.79425,0.78501,0.77623,0.75917,0.72977,0.69269,0.63957,0.58501,0.31811,0.18941,0.14519,0.11392,0.03751,0.02485,0.01856,0.01584,0.01288,0.01027,0.00877])
            elif g==1: # naiset
                emp=np.array([0.38588,0.55809,0.55088,0.54394,0.56480,0.60300,0.63778,0.68210,0.71490,0.72626,0.73840,0.73905,0.73942,0.74392,0.74532,0.74988,0.75622,0.75768,0.76988,0.78280,0.79186,0.80167,0.81017,0.81726,0.82361,0.83457,0.83865,0.84828,0.84873,0.84639,0.85031,0.84239,0.84107,0.84203,0.83953,0.83372,0.82800,0.82666,0.81766,0.81127,0.80191,0.78783,0.76008,0.72837,0.67400,0.61565,0.33920,0.19783,0.15171,0.11537,0.03342,0.02139,0.01511,0.01231,0.01015,0.00742,0.00705])
            else: # miehet
                emp=np.array([0.28022,0.37507,0.41182,0.52164,0.55157,0.58216,0.62436,0.67467,0.70950,0.73514,0.75392,0.76414,0.77281,0.78175,0.78735,0.79773,0.79759,0.80674,0.80778,0.81288,0.81438,0.81827,0.82100,0.82212,0.82604,0.83101,0.82556,0.83079,0.83082,0.82939,0.82738,0.81800,0.81905,0.81076,0.80439,0.79456,0.79029,0.78089,0.77086,0.75874,0.75042,0.73018,0.69910,0.65606,0.60369,0.55307,0.29595,0.18051,0.13823,0.11235,0.04208,0.02866,0.02238,0.01977,0.01596,0.01355,0.01076])
        elif self.year==2023: # 2022, päivitä
            if g==0: # kaikki
                emp=np.array([0.33157,0.46463,0.47919,0.53248,0.55792,0.59217,0.63085,0.67828,0.71210,0.73084,0.74641,0.75196,0.75672,0.76349,0.76708,0.77465,0.77761,0.78310,0.78955,0.79837,0.80351,0.81024,0.81580,0.81976,0.82487,0.83274,0.83191,0.83934,0.83952,0.83764,0.83863,0.82989,0.82981,0.82626,0.82183,0.81390,0.80906,0.80367,0.79425,0.78501,0.77623,0.75917,0.72977,0.69269,0.63957,0.58501,0.31811,0.18941,0.14519,0.11392,0.03751,0.02485,0.01856,0.01584,0.01288,0.01027,0.00877])
            elif g==1: # naiset
                emp=np.array([0.38588,0.55809,0.55088,0.54394,0.56480,0.60300,0.63778,0.68210,0.71490,0.72626,0.73840,0.73905,0.73942,0.74392,0.74532,0.74988,0.75622,0.75768,0.76988,0.78280,0.79186,0.80167,0.81017,0.81726,0.82361,0.83457,0.83865,0.84828,0.84873,0.84639,0.85031,0.84239,0.84107,0.84203,0.83953,0.83372,0.82800,0.82666,0.81766,0.81127,0.80191,0.78783,0.76008,0.72837,0.67400,0.61565,0.33920,0.19783,0.15171,0.11537,0.03342,0.02139,0.01511,0.01231,0.01015,0.00742,0.00705])
            else: # miehet
                emp=np.array([0.28022,0.37507,0.41182,0.52164,0.55157,0.58216,0.62436,0.67467,0.70950,0.73514,0.75392,0.76414,0.77281,0.78175,0.78735,0.79773,0.79759,0.80674,0.80778,0.81288,0.81438,0.81827,0.82100,0.82212,0.82604,0.83101,0.82556,0.83079,0.83082,0.82939,0.82738,0.81800,0.81905,0.81076,0.80439,0.79456,0.79029,0.78089,0.77086,0.75874,0.75042,0.73018,0.69910,0.65606,0.60369,0.55307,0.29595,0.18051,0.13823,0.11235,0.04208,0.02866,0.02238,0.01977,0.01596,0.01355,0.01076])
        elif self.year==2024: # 2022, päivitä
            if g==0: # kaikki
                emp=np.array([0.33157,0.46463,0.47919,0.53248,0.55792,0.59217,0.63085,0.67828,0.71210,0.73084,0.74641,0.75196,0.75672,0.76349,0.76708,0.77465,0.77761,0.78310,0.78955,0.79837,0.80351,0.81024,0.81580,0.81976,0.82487,0.83274,0.83191,0.83934,0.83952,0.83764,0.83863,0.82989,0.82981,0.82626,0.82183,0.81390,0.80906,0.80367,0.79425,0.78501,0.77623,0.75917,0.72977,0.69269,0.63957,0.58501,0.31811,0.18941,0.14519,0.11392,0.03751,0.02485,0.01856,0.01584,0.01288,0.01027,0.00877])
            elif g==1: # naiset
                emp=np.array([0.38588,0.55809,0.55088,0.54394,0.56480,0.60300,0.63778,0.68210,0.71490,0.72626,0.73840,0.73905,0.73942,0.74392,0.74532,0.74988,0.75622,0.75768,0.76988,0.78280,0.79186,0.80167,0.81017,0.81726,0.82361,0.83457,0.83865,0.84828,0.84873,0.84639,0.85031,0.84239,0.84107,0.84203,0.83953,0.83372,0.82800,0.82666,0.81766,0.81127,0.80191,0.78783,0.76008,0.72837,0.67400,0.61565,0.33920,0.19783,0.15171,0.11537,0.03342,0.02139,0.01511,0.01231,0.01015,0.00742,0.00705])
            else: # miehet
                emp=np.array([0.28022,0.37507,0.41182,0.52164,0.55157,0.58216,0.62436,0.67467,0.70950,0.73514,0.75392,0.76414,0.77281,0.78175,0.78735,0.79773,0.79759,0.80674,0.80778,0.81288,0.81438,0.81827,0.82100,0.82212,0.82604,0.83101,0.82556,0.83079,0.83082,0.82939,0.82738,0.81800,0.81905,0.81076,0.80439,0.79456,0.79029,0.78089,0.77086,0.75874,0.75042,0.73018,0.69910,0.65606,0.60369,0.55307,0.29595,0.18051,0.13823,0.11235,0.04208,0.02866,0.02238,0.01977,0.01596,0.01355,0.01076])
        else:
            print('Empstats, unknown year',self.year)

        return self.map_ratios(emp)
        
    def emp_stats_tyovoimatutkimus(self,g=0):
        '''
        työssä olevien osuus väestöstö
        Lähde: Tilastokeskus, tyovoimatutkimus
        '''
        x=np.array([17.5,22.5,27.5,32.5,37.5,42.5,47.5,52.5,57.5,62.5,67.5,72.5])
        if self.year==2018:
            if g==0: # kaikki
                emp=np.array([24.5,58.6,73.5,77.3,84.1,85.9,85.0,84.6,78.0,51.0,13.9,7.2])/100
            elif g==1: # naiset
                emp=np.array([28.4,60.1,68.6,70.1,81.0,84.6,83.7,85.9,80.1,51.7,10.6,4.8])/100
            else: # miehet
                emp=np.array([21.0,57.2,78.1,84.2,87.1,87.1,86.2,83.3,76.0,50.2,17.3,10.1])/100
        elif self.year==2019:
            if g==0: # kaikki
                emp=np.array([25.8,58.7,75.1,78.0,84.3,85.9,87.4,84.0,78.1,53.5,15.0,7.1])/100
            elif g==1: # naiset
                emp=np.array([29.8,59.4,71.0,71.8,80.7,84.5,87.6,85.0,80.4,54.7,11.3,4.7])/100
            else: # miehet
                emp=np.array([21.8,58.1,79.0,83.8,87.7,87.2,87.2,82.9,75.7,52.2,19.1,9.7])/100
        elif self.year==2020:
            if g==0: # kaikki
                emp=np.array([23.4,55.1,73.6,77.8,83.5,85.3,86.2,83.7,77.9,54.7,14.1,6.9])/100
            elif g==1: # naiset
                emp=np.array([27.1,55.4,68.4,71.4,80.7,84.7,86.7,85.7,78.9,56.6,10.4,3.5])/100
            else: # miehet
                emp=np.array([19.5,54.8,78.3,84.5,86.1,85.9,85.7,81.7,77.0,52.8,18.1,10.9])/100
        elif self.year==2021: # päivitä
            if g==0: # kaikki
                emp=np.array([27.1,57.8,75.0,79.9,84.5,86.1,85.8,84.2,79.4,56.9,16.0,8.1])/100
            elif g==1: # naiset
                emp=np.array([30.4,58.2,73.2,76.5,82.0,85.0,86.9,84.8,80.0,57.3,11.3,4.6])/100
            else: # miehet
                emp=np.array([23.7,57.3,76.6,83.1,86.9,87.1,84.7,83.5,78.8,56.6,21.3,12.1])/100
        elif self.year==2022: # päivitä
            if g==0: # kaikki
                emp=np.array([29.9,59.7,75.4,81.8,85.9,86.1,85.2,85.1,81.5,60.7,19.4,7.2])/100
            elif g==1: # naiset
                emp=np.array([33.2,60.5,74.1,78.2,84.5,86.1,85.3,86.0,82.3,62.4,16.0,5.2])/100
            else: # miehet
                emp=np.array([26.8,59.0,76.6,85.0,87.1,86.0,85.1,84.3,80.6,59.0,23.2,9.4])/100
        elif self.year==2023: # päivitä
            if g==0: # kaikki
                emp=np.array([29.9,59.7,75.4,81.8,85.9,86.1,85.2,85.1,81.5,60.7,19.4,7.2])/100
            elif g==1: # naiset
                emp=np.array([33.2,60.5,74.1,78.2,84.5,86.1,85.3,86.0,82.3,62.4,16.0,5.2])/100
            else: # miehet
                emp=np.array([26.8,59.0,76.6,85.0,87.1,86.0,85.1,84.3,80.6,59.0,23.2,9.4])/100
        elif self.year==2024: # päivitä
            if g==0: # kaikki
                emp=np.array([29.9,59.7,75.4,81.8,85.9,86.1,85.2,85.1,81.5,60.7,19.4,7.2])/100
            elif g==1: # naiset
                emp=np.array([33.2,60.5,74.1,78.2,84.5,86.1,85.3,86.0,82.3,62.4,16.0,5.2])/100
            else: # miehet
                emp=np.array([26.8,59.0,76.6,85.0,87.1,86.0,85.1,84.3,80.6,59.0,23.2,9.4])/100
        else:
            print('Empstats, unknown year',self.year)
            
        f = interp1d(x, emp,fill_value='extrapolate')
        jasenyys_x = np.linspace(self.min_age, self.max_age+1, num=self.max_age-self.min_age+1, endpoint=True)
        rate=f(jasenyys_x)

        return self.map_ratios(rate)
        
    def disab_stat(self,g):
        '''
        Työkyvyttömyyselökkeellö olevien osuus väestöstö
        Lähde: ETK
        '''
        if self.year==2018:
            if g==1:
                ratio=np.array([0.00695,0.00917,0.01212,0.01522,0.01702,0.02006,0.01962,0.02080,0.02151,0.02232,0.02209,0.02139,0.02143,0.02428,0.02400,0.02407,0.02596,0.02634,0.02843,0.02701,0.02862,0.03060,0.03189,0.03313,0.03507,0.03687,0.04016,0.04311,0.04637,0.04879,0.05238,0.05693,0.05966,0.06693,0.07134,0.07581,0.08253,0.08928,0.10474,0.11559,0.13362,0.15514,0.17829,0.21062,0.22918,0.14342,0.13016,0.01107,0.00000,0.00000,0.00000,0.00000,0.00000])
            else:
                ratio=np.array([0.008240,0.010067,0.014412,0.017866,0.019956,0.019219,0.022074,0.022874,0.024247,0.025981,0.025087,0.023163,0.025013,0.023496,0.025713,0.025634,0.028251,0.028931,0.028930,0.030955,0.031212,0.030981,0.035395,0.035223,0.035834,0.036878,0.040316,0.044733,0.046461,0.050653,0.054798,0.057018,0.062750,0.067904,0.072841,0.079978,0.083953,0.092812,0.106671,0.119491,0.129240,0.149504,0.179130,0.207500,0.227680,0.142296,0.135143,0.010457,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000 ])
        elif self.year==2019:
            if g==1:
                ratio=np.array([0.007156,0.010183,0.013715,0.016376,0.017800,0.019105,0.021587,0.020809,0.021523,0.023496,0.023225,0.022866,0.022776,0.022729,0.024888,0.025197,0.024833,0.027636,0.028097,0.030063,0.029108,0.030427,0.032784,0.033621,0.035846,0.037151,0.039505,0.042315,0.045473,0.049107,0.051426,0.054678,0.061060,0.063674,0.071288,0.075711,0.080948,0.089158,0.097481,0.114164,0.128157,0.148783,0.177420,0.203026,0.230656,0.151143,0.126128,0.009533,0.000000,0.000000,0.000000,0.000000,0.000000])
            else:
                ratio=np.array([0.01031,0.01118,0.01413,0.01816,0.02096,0.02236,0.02134,0.02440,0.02398,0.02584,0.02650,0.02637,0.02427,0.02630,0.02466,0.02691,0.02697,0.02874,0.02978,0.02991,0.03207,0.03243,0.03262,0.03678,0.03677,0.03733,0.03849,0.04225,0.04717,0.04909,0.05271,0.05722,0.05967,0.06600,0.07163,0.07739,0.08487,0.09016,0.09963,0.11383,0.13058,0.14275,0.16981,0.19987,0.22413,0.14567,0.12598,0.01005,0.00000,0.00000,0.00000,0.00000,0.00000])
        elif self.year==2020:
            if g==1:
                ratio=np.array([0.00685,0.01003,0.01446,0.01794,0.01907,0.01962,0.01975,0.02278,0.02092,0.02225,0.02397,0.02389,0.02380,0.02343,0.02354,0.02630,0.02623,0.02683,0.02899,0.02898,0.03178,0.03043,0.03163,0.03499,0.03561,0.03703,0.03928,0.04109,0.04369,0.04798,0.05089,0.05384,0.05788,0.06378,0.06675,0.07551,0.07984,0.08637,0.09628,0.10459,0.12446,0.14080,0.16941,0.20190,0.22434,0.17349,0.12004,0.00978,0.00000,0.00000,0.00000,0.00000,0.00000])
            else:
                ratio=np.array([0.010314749,0.011183658,0.014133714,0.018155245,0.02095752,0.022361036,0.021342173,0.02440054,0.023979606,0.025840831,0.026502245,0.026371168,0.024266166,0.026298631,0.02465769,0.026913373,0.026965863,0.028742197,0.029784786,0.029912624,0.03206618,0.032433784,0.032615768,0.03678432,0.036767383,0.037333556,0.038492063,0.042250556,0.047171664,0.049090678,0.052714102,0.057218551,0.059674449,0.065998657,0.071631827,0.077391518,0.084869337,0.090156221,0.099630898,0.11382708,0.130583058,0.142753502,0.169805478,0.199871183,0.224134034,0.145669401,0.12597889,0.010053309,0,0,0,0,0])
        elif self.year==2021:
            if g==1:
                ratio=np.array([0.00685,0.01003,0.01446,0.01794,0.01907,0.01962,0.01975,0.02278,0.02092,0.02225,0.02397,0.02389,0.02380,0.02343,0.02354,0.02630,0.02623,0.02683,0.02899,0.02898,0.03178,0.03043,0.03163,0.03499,0.03561,0.03703,0.03928,0.04109,0.04369,0.04798,0.05089,0.05384,0.05788,0.06378,0.06675,0.07551,0.07984,0.08637,0.09628,0.10459,0.12446,0.14080,0.16941,0.20190,0.22434,0.17349,0.12004,0.00978,0.00000,0.00000,0.00000,0.00000,0.00000])
            else:
                ratio=np.array([0.010314749,0.011183658,0.014133714,0.018155245,0.02095752,0.022361036,0.021342173,0.02440054,0.023979606,0.025840831,0.026502245,0.026371168,0.024266166,0.026298631,0.02465769,0.026913373,0.026965863,0.028742197,0.029784786,0.029912624,0.03206618,0.032433784,0.032615768,0.03678432,0.036767383,0.037333556,0.038492063,0.042250556,0.047171664,0.049090678,0.052714102,0.057218551,0.059674449,0.065998657,0.071631827,0.077391518,0.084869337,0.090156221,0.099630898,0.11382708,0.130583058,0.142753502,0.169805478,0.199871183,0.224134034,0.145669401,0.12597889,0.010053309,0,0,0,0,0])
        elif self.year==2022:
            if g==1:
                ratio=np.array([0.00685,0.01003,0.01446,0.01794,0.01907,0.01962,0.01975,0.02278,0.02092,0.02225,0.02397,0.02389,0.02380,0.02343,0.02354,0.02630,0.02623,0.02683,0.02899,0.02898,0.03178,0.03043,0.03163,0.03499,0.03561,0.03703,0.03928,0.04109,0.04369,0.04798,0.05089,0.05384,0.05788,0.06378,0.06675,0.07551,0.07984,0.08637,0.09628,0.10459,0.12446,0.14080,0.16941,0.20190,0.22434,0.17349,0.12004,0.00978,0.00000,0.00000,0.00000,0.00000,0.00000])
            else:
                ratio=np.array([0.010314749,0.011183658,0.014133714,0.018155245,0.02095752,0.022361036,0.021342173,0.02440054,0.023979606,0.025840831,0.026502245,0.026371168,0.024266166,0.026298631,0.02465769,0.026913373,0.026965863,0.028742197,0.029784786,0.029912624,0.03206618,0.032433784,0.032615768,0.03678432,0.036767383,0.037333556,0.038492063,0.042250556,0.047171664,0.049090678,0.052714102,0.057218551,0.059674449,0.065998657,0.071631827,0.077391518,0.084869337,0.090156221,0.099630898,0.11382708,0.130583058,0.142753502,0.169805478,0.199871183,0.224134034,0.145669401,0.12597889,0.010053309,0,0,0,0,0])
        elif self.year==2023:
            if g==1:
                ratio=np.array([0.00685,0.01003,0.01446,0.01794,0.01907,0.01962,0.01975,0.02278,0.02092,0.02225,0.02397,0.02389,0.02380,0.02343,0.02354,0.02630,0.02623,0.02683,0.02899,0.02898,0.03178,0.03043,0.03163,0.03499,0.03561,0.03703,0.03928,0.04109,0.04369,0.04798,0.05089,0.05384,0.05788,0.06378,0.06675,0.07551,0.07984,0.08637,0.09628,0.10459,0.12446,0.14080,0.16941,0.20190,0.22434,0.17349,0.12004,0.00978,0.00000,0.00000,0.00000,0.00000,0.00000])
            else:
                ratio=np.array([0.010314749,0.011183658,0.014133714,0.018155245,0.02095752,0.022361036,0.021342173,0.02440054,0.023979606,0.025840831,0.026502245,0.026371168,0.024266166,0.026298631,0.02465769,0.026913373,0.026965863,0.028742197,0.029784786,0.029912624,0.03206618,0.032433784,0.032615768,0.03678432,0.036767383,0.037333556,0.038492063,0.042250556,0.047171664,0.049090678,0.052714102,0.057218551,0.059674449,0.065998657,0.071631827,0.077391518,0.084869337,0.090156221,0.099630898,0.11382708,0.130583058,0.142753502,0.169805478,0.199871183,0.224134034,0.145669401,0.12597889,0.010053309,0,0,0,0,0])
        elif self.year==2024:
            if g==1:
                ratio=np.array([0.00685,0.01003,0.01446,0.01794,0.01907,0.01962,0.01975,0.02278,0.02092,0.02225,0.02397,0.02389,0.02380,0.02343,0.02354,0.02630,0.02623,0.02683,0.02899,0.02898,0.03178,0.03043,0.03163,0.03499,0.03561,0.03703,0.03928,0.04109,0.04369,0.04798,0.05089,0.05384,0.05788,0.06378,0.06675,0.07551,0.07984,0.08637,0.09628,0.10459,0.12446,0.14080,0.16941,0.20190,0.22434,0.17349,0.12004,0.00978,0.00000,0.00000,0.00000,0.00000,0.00000])
            else:
                ratio=np.array([0.010314749,0.011183658,0.014133714,0.018155245,0.02095752,0.022361036,0.021342173,0.02440054,0.023979606,0.025840831,0.026502245,0.026371168,0.024266166,0.026298631,0.02465769,0.026913373,0.026965863,0.028742197,0.029784786,0.029912624,0.03206618,0.032433784,0.032615768,0.03678432,0.036767383,0.037333556,0.038492063,0.042250556,0.047171664,0.049090678,0.052714102,0.057218551,0.059674449,0.065998657,0.071631827,0.077391518,0.084869337,0.090156221,0.099630898,0.11382708,0.130583058,0.142753502,0.169805478,0.199871183,0.224134034,0.145669401,0.12597889,0.010053309,0,0,0,0,0])
        else: # päivitä
            print('Empstats, unknown year',self.year)
            
        return self.map_ratios(ratio)
        
    def get_gini(self,year):
        if year==2018:
            return 28.1
        elif year==2019:
            return 27.9
        elif year==2020:
            return 27.7
        else:
            return 27.8
            
    def get_kassanjasenyys_rate(self):
        rate_age=np.array([18,30,40,50,60,74])
        #rate_obs=np.array([0.429,0.836,0.917,0.946,0.933,0.933])
        #rate_obs=np.array([0.20,0.836,0.917,0.946,0.933,0.933])
        palkansaajista=np.array([0.20,0.836,0.917,0.933,0.933,0.933])
        yrittajista=np.array([0.121,0.121,0.121,0.121,0.121,0.121])
        suhde=0.104 # yrittäjiä/(yrittäjiä+palkansaajia)
        rate_obs=(1.0-suhde)*palkansaajista+suhde*yrittajista
        #rate_obs=np.array([0.20,0.836,0.917,0.933,0.933,0.933])
        initial_kassanjasenia=rate_obs[0]
        
        x1=self.min_age
        x2=self.max_age
        f = interp1d(rate_age, rate_obs,fill_value='extrapolate')
        n_time = int(np.round((x2-x1)*self.inv_timestep))
        jasenyys_x = np.linspace(x1, x2, num=n_time, endpoint=True)
        rate=f(jasenyys_x)
        
        kassanjasenyys_joinrate=rate*0
        for k in range(0,rate.shape[0]-1):
            kassanjasenyys_joinrate[k+1]=(rate[k+1]-rate[k])/(1-rate[k])
            
        kassanjasenyys_rate=rate
            
        return jasenyys_x,kassanjasenyys_rate
        
    def student_stats(self,g=0):
        '''
        Opiskelijoiden osuus väestöstö
        Lähde: Tilastokeskus
        '''
        ### student_stats
        if self.year==2018:
            if g==0:
                emp=np.array([0.6468693525545806,0.33617669511801324,0.3084753140261392,0.28768449726128703,0.2744399343764169,0.242892547289847,0.19502356053978775,0.15469414249065103,0.12278739220265822,0.09782381008128323,0.08204109927235087,0.07021704905040344,0.06161909149301402,0.05390117048382333,0.047557754076968314,0.04468583149777561,0.041091976420292546,0.03882346414884703,0.034765852719005626,0.0325268865591015,0.0304298123202439,0.026552579365079362,0.024801856416801348,0.02388611754724671,0.021416011043208442,0.019236137018056657,0.0182967353361597,0.017200138622276543,0.016611061181320073,0.015478740066652962,0.014512263864683853,0.013437984065004127,0.01252441608209464,0.01049770166189938,0.00968700014841245,0.008885721075219257,0.008866447010560538,0.007576484582579513,0.00746010539882049,0.0061013878905526175,0.004830819446197366,0.00405397656610864,0.002890348439899228,0.002485797490494431,0.0016066004119527416,0.0018095318146674707,0.0018522822116196333,0.0017082803776383823,0.0015710183493221602,0.0014177698698493277,0.0014472551050146937,0.0013188593107691477,0.0014324640271366998,0.001294518792534074,0.000918005955402776,0.0008534120857094404,0.0007278968265134424,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.6075971363036075,0.2899386084583902,0.28634543697362974,0.2910571258357053,0.2711358921161826,0.23056208988485824,0.1828537349038318,0.15051558646102642,0.12320405401514498,0.09950795947901592,0.08790580704160951,0.07833765628187567,0.06811640550047969,0.06181184242720822,0.057942570729792565,0.05416946971248062,0.051104854534596025,0.04916250940609236,0.04347084411338242,0.03997888129528056,0.03788936069127297,0.032470238095238094,0.030220601422849287,0.028801741637492276,0.02654112108283066,0.02363581549593006,0.022252781597699712,0.020515481750562187,0.02027929974609114,0.018184728669761487,0.016570471048221933,0.016112758736661875,0.014907184355958622,0.011699797610136129,0.010769273142920099,0.010775389339767493,0.01034649997305599,0.008664125189944282,0.008318928262748488,0.006355301944451957,0.005279688092272703,0.004558980098823401,0.0030476620481417727,0.002197086825616405,0.001507936507936508,0.0016279255957940809,0.001845456223142021,0.001678488277654448,0.0017912177646655955,0.0013958453074965104,0.0014576873128196973,0.0010835633755579062,0.0013972867232356079,0.001205313637995589,0.0007138136153337739,0.0008119079837618403,0.0005614192679092747,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.6861415688055538,0.3824147817776362,0.3306051910786487,0.2843118686868687,0.2777439766366513,0.2552230046948357,0.20719338617574362,0.1588726985202756,0.12237073039017146,0.09613966068355052,0.07617639150309223,0.06209644181893117,0.05512177748554834,0.04599049854043844,0.03717293742414406,0.035202193283070594,0.031079098305989063,0.02848441889160169,0.02606086132462883,0.025074891822922444,0.022970263949214833,0.020634920634920634,0.019383111410753412,0.01897049345700115,0.01629090100358622,0.014836458540183258,0.014340689074619686,0.013884795493990897,0.012942822616549004,0.012772751463544438,0.012454056681145773,0.010763209393346379,0.01014164780823066,0.009295605713662633,0.008604727153904803,0.0069960528106710225,0.007386394048065086,0.006488843975214743,0.006601282534892493,0.005847473836653278,0.004381950800122029,0.00354897303339388,0.002733034831656684,0.002774508155372457,0.0017052643159689751,0.0019911380335408606,0.0018591082000972456,0.001738072477622317,0.0013508189339787246,0.0014396944322021448,0.00143682289720969,0.0015541552459803895,0.0014676413310377918,0.001383723947072559,0.0011221982954717782,0.0008949161876570406,0.0008943743851176102,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2019:
            if g==0:
                emp=np.array([0.6424900242859402,0.3292885780642379,0.30734378480276414,0.29514131389912784,0.28239925143744443,0.2497594995830332,0.2036246496322464,0.15785960674230837,0.12444080163697108,0.10427188260325547,0.08370039534927388,0.07222823161668017,0.06591031276725794,0.058755436410305256,0.05377273220239336,0.0467886910104596,0.04497040309919262,0.04271998500877214,0.038970830175946734,0.03380416138674404,0.0337791701585911,0.03151139768178128,0.028629502162035844,0.026344290104298514,0.023951589489512936,0.022554546091112192,0.02010310583093108,0.019202569268691225,0.019091171187736858,0.01667197795293984,0.016410620658692022,0.014600287350626235,0.013229119744330881,0.012133417834687285,0.011381034345248599,0.010179742684158843,0.009573824966843744,0.008931189737455172,0.007149557514336281,0.006645981929009339,0.005728085003622313,0.004548604169764217,0.003341375686766194,0.002555543311269908,0.0019040962050370426,0.0018466917264725075,0.0019898756520751373,0.0019917558243802785,0.00179237092752109,0.0013421685247622542,0.0017422441403080427,0.001371028005596318,0.001146283727549743,0.0012078997369273368,0.0010780864545251183,0.0007943113278633582,0.0009095565541839647,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.5872585799638738,0.27901157335001564,0.2872300501518201,0.2947321243880576,0.2748129347002011,0.23903254856554743,0.1917340631630739,0.15110703291498934,0.12175607451802427,0.10718879519794197,0.08889465191332412,0.07986042157224318,0.07646003357064306,0.06798359614162768,0.06544558371618948,0.05769288524491696,0.05604943309335743,0.05297881979839166,0.04983047079095103,0.04331087584215592,0.04246427214542479,0.04006623495668116,0.03533600356030263,0.033173234688702605,0.030121543068522105,0.028568909267260384,0.02518353592490071,0.02363999750171757,0.023876986869384935,0.021198464363211485,0.019744631828218503,0.01778122575640031,0.015854069109050285,0.014414618920606095,0.013158260000555201,0.012085092293684298,0.011610990639839697,0.010817664355661064,0.008548606844228354,0.00793221073149602,0.006395663956639566,0.005107030316201239,0.003755070715930271,0.003003173164097915,0.0016891891891891893,0.0019138755980861245,0.0018801031370863773,0.001752662187641076,0.0018823144283492922,0.001485056617783553,0.0019028708529825432,0.0013368626507312639,0.0009378663540445487,0.001205808404741136,0.0010646308846822986,0.000562535158447403,0.0007919826982241311,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.6977214686080063,0.3795655827784602,0.32745751945370816,0.2955505034101981,0.28998556817468785,0.260486450600519,0.21551523610141893,0.16461218056962737,0.12712552875591787,0.10135497000856898,0.07850613878522365,0.06459604166111718,0.055360591963872795,0.04952727667898283,0.04209988068859724,0.03588449677600224,0.03389137310502781,0.03246115021915261,0.028111189560942444,0.02429744693133216,0.025094068171757414,0.02295656040688141,0.02192300076376906,0.01951534551989442,0.017781635910503767,0.016540182914964,0.015022675736961451,0.014765141035664883,0.014305355506088779,0.012145491542668193,0.013076609489165543,0.011419348944852158,0.010604170379611477,0.009852216748768473,0.009603808689941994,0.008274393074633388,0.007536659293847792,0.007044715119249281,0.005750508184444207,0.005359753126522657,0.00506050605060506,0.003990178023327195,0.002927680657602117,0.0021079134584419006,0.002119003220884896,0.0017795078548588905,0.0020996481670638974,0.0022308494611194807,0.001702427426692888,0.0011992804317409553,0.0015816174276335423,0.0014051933604613718,0.0013547011010549375,0.0012099910691135375,0.0010915420243679383,0.0010260874972793134,0.0010271304101437983,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2020:
            if g==0:
                emp=np.array([0.6962178291710099,0.3758151442153828,0.3378681436040653,0.3277538011304529,0.31509756103380526,0.2746043395607585,0.22123033528095823,0.17031118306991413,0.1316108297153577,0.10609517012126045,0.09429406832472001,0.0789955762373241,0.06962186068142123,0.06288881974497695,0.05831453333098347,0.052551929701795064,0.047930173638329965,0.045097648777224594,0.04260042547570256,0.03833586425643804,0.034481503183714894,0.03325757987593124,0.03154600509037283,0.02883105024550281,0.025683961537078238,0.022689561007084497,0.021330596805573348,0.019638761354652617,0.019088240443246328,0.01869415618650497,0.015733824645701455,0.01533390324444633,0.013774628274146113,0.013290552200620845,0.01211262466072552,0.009831668417965041,0.0097225290657535,0.009026330832064151,0.0075307129406107735,0.006906083799491933,0.005748439408568259,0.005113912698819496,0.0034835873236930535,0.002692234797698481,0.0018825009986147478,0.0014424973468684817,0.0020167303771799674,0.0018700329334966656,0.001808590101043164,0.0015968798138222585,0.0015182196467237773,0.0015345819797654492,0.0012874687442172125,0.0009344654284504534,0.000954653873215347,0.0010592167760810275,0.0007111953594740343,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.6707865168539325,0.3374995660174287,0.33025772659474834,0.33600027236824187,0.3191671811758249,0.2707863331698545,0.2166368400869232,0.16494435612082672,0.12947399353511607,0.10913616398243046,0.10142792384406166,0.08669066803817362,0.07934135957368822,0.07431577736890524,0.06909717238409646,0.06492327249614092,0.0598961442043691,0.05473372781065089,0.05281838925040142,0.047907671869810695,0.04315857678113644,0.04186668994210235,0.03875854751237916,0.03496110503120471,0.03174083769633508,0.02771592640337513,0.026385224274406333,0.024465015628756914,0.023234055824107282,0.022521588946459413,0.019464720194647202,0.017540490365533578,0.016655810923978786,0.01598334302948651,0.01440013633265167,0.011314670150954937,0.011791996907017205,0.010813636738849297,0.008706467661691543,0.008218664667773197,0.0070290661383559045,0.00530035335689046,0.0037875691435733942,0.0030270508269352485,0.001962401524416257,0.0013137008046417429,0.0019796682718031034,0.0017294960140521551,0.0017104067561066866,0.0017036243233588878,0.001497486362177773,0.0016426304359930953,0.00132389495298822,0.0006315623273071762,0.0009079824629672867,0.0010013175230566536,0.0004621448960173984,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.7216491414880872,0.4141307224133368,0.3454785606133823,0.3195073298926638,0.3110279408917855,0.27842234595166254,0.22582383047499327,0.17567801001900157,0.13374766589559936,0.10305417626009043,0.08716021280537836,0.07130048443647459,0.05990236178915424,0.051461862121048654,0.04753189427787048,0.04018058690744921,0.03596420307229083,0.03546156974379829,0.0323824617010037,0.02876405664306539,0.025804429586293354,0.024648469809760133,0.024333462668366498,0.022700995459800907,0.019627085377821395,0.017663195610793863,0.016275969336740363,0.014812507080548317,0.014942425062385377,0.014866723426550528,0.012002929096755707,0.013127316123359085,0.010893445624313438,0.01059776137175518,0.009825112988799371,0.008348666684975145,0.007653061224489796,0.007239024925279004,0.0063549582195300035,0.00559350293121067,0.004467812678780614,0.004927472040748533,0.0031796055038127127,0.002357418768461713,0.0018026004728132388,0.0015712938890952205,0.002053792482556831,0.0020105698529411763,0.0019067734459796415,0.001490135304285629,0.0015389529312697815,0.0014265335235378032,0.0012510425354462051,0.0012373685295937306,0.0010013252834634074,0.0011171160291054015,0.0009602458229306702,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2021:
            if g==0:
                emp=np.array([0.629649914953809,0.3755125220309039,0.331884236453202,0.3234873574799754,0.3091513216228772,0.27804932241996244,0.2231255114114019,0.17094888352369367,0.1298178263655069,0.10264391440881972,0.08928528928501883,0.08024397100115833,0.07134210482401337,0.06327463785455895,0.06089135923849082,0.05553276271283805,0.05124314200126805,0.047321329660555175,0.04441934901331178,0.041471343438085076,0.0375881313229081,0.032642564023816316,0.03233174508636093,0.02984622508450154,0.02700701965070111,0.024781822081227447,0.021448495968178383,0.021405658001093286,0.019504647466092134,0.018062189843014678,0.01696125818736601,0.01623533659496731,0.013658581778836422,0.01406217722530714,0.012912820385085634,0.011208129154552663,0.009667521081671692,0.00899935769016352,0.008646716412488258,0.007593994037626461,0.006059847814888263,0.004801815053234229,0.004129931330844751,0.00302819293408674,0.002577270663594016,0.0018341890456321159,0.0020225700034881026,0.0019090631805484398,0.0018657839385225537,0.0017598430663608887,0.0017721612582847646,0.001401361278905556,0.0013706944853885412,0.0011999412556147528,0.0008222281053260306,0.0008656378198703459,0.0009586152407121371,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.5850120596528179,0.3311681508643269,0.3273809523809524,0.33640696228760875,0.318390649280454,0.28184134533718364,0.22428123281911969,0.1699955755009165,0.1320286742687759,0.10613792097973467,0.09680974477958236,0.09276094276094277,0.08490031717263254,0.07566028253950528,0.07513774301293215,0.06876244665718349,0.06605559729526672,0.06053045828506935,0.05670564457918291,0.05331577620261676,0.049200220628792056,0.04167719120990149,0.04060869565217391,0.03803309525908944,0.03448377581120944,0.03113509666706203,0.026936125409452505,0.027362383307482953,0.025417116792701956,0.02216963507286088,0.021320637549161664,0.020279044986846923,0.01604380824286675,0.01725047314697031,0.01624869703844503,0.013102546612096408,0.012015687147108725,0.009956853634251576,0.009674751929437706,0.008589389259199047,0.006520864081577888,0.006013605442176871,0.004690226876090751,0.0034460124712832295,0.0025720449139886056,0.002056437792756769,0.0017619690003578999,0.0019374629998385447,0.0015775873793009655,0.0018827326519634212,0.0019393805064553665,0.0012949174490126255,0.0013478981213669934,0.0011196679228794582,0.0005591054313099042,0.0007354099910700215,0.0008295646123792448,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.6742877702547999,0.4198568931974808,0.33638752052545157,0.31056775267234205,0.2999119939653005,0.2742572995027413,0.22196979000368416,0.17190219154647082,0.1276069784622379,0.09914990783790475,0.08176083379045529,0.06772699924137389,0.05778389247539422,0.050888993169612595,0.0466449754640495,0.042303078768492604,0.03643068670726937,0.034112201036041,0.032133053447440656,0.029626910673553393,0.02597604201702414,0.023607936837731144,0.024054794520547946,0.02165935490991364,0.019530263490192778,0.018428547495392862,0.015960866526904264,0.015448932694703618,0.013592178139482311,0.013954744613168478,0.012601878825570357,0.012191628203087697,0.011273355314806091,0.010873881303643971,0.009576943731726236,0.00931371169700892,0.00731935501623466,0.008041861746075461,0.007618680895538808,0.006598598816053875,0.005598831548198637,0.003590024664291587,0.003569635785598751,0.0026103733968902507,0.002582496413199426,0.0016119402985074627,0.002283171006618306,0.0018806633612583347,0.002153980497744142,0.0016369534807583559,0.0016049420101141628,0.0015078051087984864,0.001393490849410089,0.0012802145883500473,0.001085350779342157,0.0009958656486706702,0.0010876658690450293,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2022:
            if g==0:
                emp=np.array([0.6105759828008752,0.36016254273373727,0.3200082881537852,0.31085326683659426,0.2961498182479252,0.26076304815478224,0.21717549619463294,0.16641070038324632,0.12561170757615392,0.09970727006967911,0.08447530352041628,0.07503089648504051,0.06789322495112164,0.061260107735702285,0.055520658256038594,0.0515436462531838,0.04817152678403533,0.04471627959833152,0.04152182213308703,0.03694700539525616,0.03539286556624591,0.03266022699941268,0.029000580518836284,0.02776118476173848,0.026129642947531506,0.023567648089261407,0.02124305011194233,0.018677343473413686,0.018161677270230565,0.01723714716276528,0.015677151269835564,0.014383645059768906,0.013870882888513777,0.012206702538576846,0.011129111867311378,0.010024730696630913,0.009421473363363957,0.008356152220173213,0.00734188861644527,0.006531885964350937,0.00604490590891582,0.004262147501979019,0.004306813129634657,0.002993180179939787,0.0026046947513059648,0.0020732356282642155,0.0022339957079804858,0.0017817522346164866,0.0017737541744918578,0.001687352553004321,0.001680866391002669,0.0013963753181419304,0.0012489650274678395,0.001046203137411532,0.0009559402291935917,0.000605417463136484,0.0007138329447531051,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.563387813763829,0.3039765055360518,0.30883989428293224,0.3207994230967343,0.30617958347558893,0.26463316851530133,0.22084043726807742,0.17224271721155068,0.12963654468508837,0.10515819864868887,0.0920814544619008,0.08368069434134642,0.08028511437727925,0.0744648190013676,0.06822370773843911,0.06560009013322818,0.06169478204732366,0.05854697063780715,0.05472096707939675,0.047051765512512854,0.045583490933363,0.04294713777047384,0.037122775701455904,0.03590865896852593,0.03276915431611564,0.029940119760479042,0.026842865992153624,0.024173324779844872,0.022785622593068038,0.02206454703311179,0.018917237087741134,0.018001583313255087,0.017174238642036946,0.01446816683204763,0.013030932952747355,0.011434702636419375,0.011899678310131808,0.010112829084830756,0.008785787533604945,0.007952286282306162,0.0070386172785824935,0.004603580562659846,0.004802313842123932,0.0032591131925615536,0.002719406674907293,0.002001668056713928,0.0023561864260674675,0.0017185940791662048,0.0018705777103044433,0.0014545254953619846,0.0015745038955398106,0.001371857326838009,0.001172748595429008,0.001080036380172806,0.0009126610985120858,0.0004048582995951417,0.0005876696228229512,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.6577641518379215,0.41634857993142266,0.3311766820246381,0.30090711057645414,0.28612005302026133,0.2568929277942631,0.21351055512118844,0.16057868355494193,0.12158687046721951,0.09425634149066935,0.07686915257893176,0.06638109862873462,0.05550133552496404,0.04805539647003697,0.042817608773638084,0.03748720237313942,0.034648271520746995,0.030885588558855887,0.02832267718677731,0.026842245277999468,0.02520224019912881,0.02237331622835151,0.02087838533621666,0.019613710554951033,0.01949013157894737,0.01719517641804377,0.015643234231731036,0.0131813621669825,0.01353773194739309,0.012409747292418772,0.012437065451929992,0.010765706806282723,0.010567527134990611,0.00994523824510606,0.0092272907818754,0.008614758756842452,0.006943268416596105,0.00659947535551567,0.005897989699285596,0.005111485646395712,0.005051194539249146,0.003920714441298192,0.0038113124171453823,0.0027272471673180196,0.0024899828277046366,0.0021448031998145033,0.0021118049898935045,0.0018449103900667681,0.0016769306386792725,0.0019201796106466573,0.0017872288864655276,0.0014208933094458517,0.0013251814595066711,0.001012369894650258,0.0009992193598750976,0.0008059766266778263,0.0008399962666832592,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2023:
            if g==0:
                emp=np.array([0.6105759828008752,0.36016254273373727,0.3200082881537852,0.31085326683659426,0.2961498182479252,0.26076304815478224,0.21717549619463294,0.16641070038324632,0.12561170757615392,0.09970727006967911,0.08447530352041628,0.07503089648504051,0.06789322495112164,0.061260107735702285,0.055520658256038594,0.0515436462531838,0.04817152678403533,0.04471627959833152,0.04152182213308703,0.03694700539525616,0.03539286556624591,0.03266022699941268,0.029000580518836284,0.02776118476173848,0.026129642947531506,0.023567648089261407,0.02124305011194233,0.018677343473413686,0.018161677270230565,0.01723714716276528,0.015677151269835564,0.014383645059768906,0.013870882888513777,0.012206702538576846,0.011129111867311378,0.010024730696630913,0.009421473363363957,0.008356152220173213,0.00734188861644527,0.006531885964350937,0.00604490590891582,0.004262147501979019,0.004306813129634657,0.002993180179939787,0.0026046947513059648,0.0020732356282642155,0.0022339957079804858,0.0017817522346164866,0.0017737541744918578,0.001687352553004321,0.001680866391002669,0.0013963753181419304,0.0012489650274678395,0.001046203137411532,0.0009559402291935917,0.000605417463136484,0.0007138329447531051,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.563387813763829,0.3039765055360518,0.30883989428293224,0.3207994230967343,0.30617958347558893,0.26463316851530133,0.22084043726807742,0.17224271721155068,0.12963654468508837,0.10515819864868887,0.0920814544619008,0.08368069434134642,0.08028511437727925,0.0744648190013676,0.06822370773843911,0.06560009013322818,0.06169478204732366,0.05854697063780715,0.05472096707939675,0.047051765512512854,0.045583490933363,0.04294713777047384,0.037122775701455904,0.03590865896852593,0.03276915431611564,0.029940119760479042,0.026842865992153624,0.024173324779844872,0.022785622593068038,0.02206454703311179,0.018917237087741134,0.018001583313255087,0.017174238642036946,0.01446816683204763,0.013030932952747355,0.011434702636419375,0.011899678310131808,0.010112829084830756,0.008785787533604945,0.007952286282306162,0.0070386172785824935,0.004603580562659846,0.004802313842123932,0.0032591131925615536,0.002719406674907293,0.002001668056713928,0.0023561864260674675,0.0017185940791662048,0.0018705777103044433,0.0014545254953619846,0.0015745038955398106,0.001371857326838009,0.001172748595429008,0.001080036380172806,0.0009126610985120858,0.0004048582995951417,0.0005876696228229512,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.6577641518379215,0.41634857993142266,0.3311766820246381,0.30090711057645414,0.28612005302026133,0.2568929277942631,0.21351055512118844,0.16057868355494193,0.12158687046721951,0.09425634149066935,0.07686915257893176,0.06638109862873462,0.05550133552496404,0.04805539647003697,0.042817608773638084,0.03748720237313942,0.034648271520746995,0.030885588558855887,0.02832267718677731,0.026842245277999468,0.02520224019912881,0.02237331622835151,0.02087838533621666,0.019613710554951033,0.01949013157894737,0.01719517641804377,0.015643234231731036,0.0131813621669825,0.01353773194739309,0.012409747292418772,0.012437065451929992,0.010765706806282723,0.010567527134990611,0.00994523824510606,0.0092272907818754,0.008614758756842452,0.006943268416596105,0.00659947535551567,0.005897989699285596,0.005111485646395712,0.005051194539249146,0.003920714441298192,0.0038113124171453823,0.0027272471673180196,0.0024899828277046366,0.0021448031998145033,0.0021118049898935045,0.0018449103900667681,0.0016769306386792725,0.0019201796106466573,0.0017872288864655276,0.0014208933094458517,0.0013251814595066711,0.001012369894650258,0.0009992193598750976,0.0008059766266778263,0.0008399962666832592,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2024:
            if g==0:
                emp=np.array([0.6105759828008752,0.36016254273373727,0.3200082881537852,0.31085326683659426,0.2961498182479252,0.26076304815478224,0.21717549619463294,0.16641070038324632,0.12561170757615392,0.09970727006967911,0.08447530352041628,0.07503089648504051,0.06789322495112164,0.061260107735702285,0.055520658256038594,0.0515436462531838,0.04817152678403533,0.04471627959833152,0.04152182213308703,0.03694700539525616,0.03539286556624591,0.03266022699941268,0.029000580518836284,0.02776118476173848,0.026129642947531506,0.023567648089261407,0.02124305011194233,0.018677343473413686,0.018161677270230565,0.01723714716276528,0.015677151269835564,0.014383645059768906,0.013870882888513777,0.012206702538576846,0.011129111867311378,0.010024730696630913,0.009421473363363957,0.008356152220173213,0.00734188861644527,0.006531885964350937,0.00604490590891582,0.004262147501979019,0.004306813129634657,0.002993180179939787,0.0026046947513059648,0.0020732356282642155,0.0022339957079804858,0.0017817522346164866,0.0017737541744918578,0.001687352553004321,0.001680866391002669,0.0013963753181419304,0.0012489650274678395,0.001046203137411532,0.0009559402291935917,0.000605417463136484,0.0007138329447531051,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.563387813763829,0.3039765055360518,0.30883989428293224,0.3207994230967343,0.30617958347558893,0.26463316851530133,0.22084043726807742,0.17224271721155068,0.12963654468508837,0.10515819864868887,0.0920814544619008,0.08368069434134642,0.08028511437727925,0.0744648190013676,0.06822370773843911,0.06560009013322818,0.06169478204732366,0.05854697063780715,0.05472096707939675,0.047051765512512854,0.045583490933363,0.04294713777047384,0.037122775701455904,0.03590865896852593,0.03276915431611564,0.029940119760479042,0.026842865992153624,0.024173324779844872,0.022785622593068038,0.02206454703311179,0.018917237087741134,0.018001583313255087,0.017174238642036946,0.01446816683204763,0.013030932952747355,0.011434702636419375,0.011899678310131808,0.010112829084830756,0.008785787533604945,0.007952286282306162,0.0070386172785824935,0.004603580562659846,0.004802313842123932,0.0032591131925615536,0.002719406674907293,0.002001668056713928,0.0023561864260674675,0.0017185940791662048,0.0018705777103044433,0.0014545254953619846,0.0015745038955398106,0.001371857326838009,0.001172748595429008,0.001080036380172806,0.0009126610985120858,0.0004048582995951417,0.0005876696228229512,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.6577641518379215,0.41634857993142266,0.3311766820246381,0.30090711057645414,0.28612005302026133,0.2568929277942631,0.21351055512118844,0.16057868355494193,0.12158687046721951,0.09425634149066935,0.07686915257893176,0.06638109862873462,0.05550133552496404,0.04805539647003697,0.042817608773638084,0.03748720237313942,0.034648271520746995,0.030885588558855887,0.02832267718677731,0.026842245277999468,0.02520224019912881,0.02237331622835151,0.02087838533621666,0.019613710554951033,0.01949013157894737,0.01719517641804377,0.015643234231731036,0.0131813621669825,0.01353773194739309,0.012409747292418772,0.012437065451929992,0.010765706806282723,0.010567527134990611,0.00994523824510606,0.0092272907818754,0.008614758756842452,0.006943268416596105,0.00659947535551567,0.005897989699285596,0.005111485646395712,0.005051194539249146,0.003920714441298192,0.0038113124171453823,0.0027272471673180196,0.0024899828277046366,0.0021448031998145033,0.0021118049898935045,0.0018449103900667681,0.0016769306386792725,0.0019201796106466573,0.0017872288864655276,0.0014208933094458517,0.0013251814595066711,0.001012369894650258,0.0009992193598750976,0.0008059766266778263,0.0008399962666832592,0.0,0.0,0.0,0.0,0.0])
        else:
            print("Error: Unknown year in student_stats")   

        return self.map_ratios(emp) #+self.army_stats(g=g)
        
    def outsider_stats(self,g=0):
        '''
        Työelämän ulkopuolella olevien osuus väestöstö
        Lähde: Tilastokeskus
        '''
        ### Outsider toteuma
        if self.year==2018:
            if g==0:
                emp=np.array([0.026823209708011567,0.09655223181320943,0.11013745820186352,0.06722924034145653,0.06302806832032509,0.06329399911706632,0.06326645384107646,0.06680149216596805,0.07111475375768626,0.07229034036853282,0.07529396724244918,0.07618751736311807,0.07706460917755899,0.07670949039015011,0.07393641811192406,0.07204760875375045,0.06954143145185726,0.06426451755067887,0.06106354377408359,0.059611488027854084,0.05827648732414116,0.054124149659863945,0.05150243275922989,0.0454763167340864,0.04385558950359563,0.043378776965401156,0.04240427026651135,0.04169206695735336,0.0409400041947994,0.039403608219000186,0.03852575838075097,0.03975662491852944,0.03881868711650015,0.03899095560064596,0.03840734247942548,0.039394340607469665,0.03886417075149237,0.040043541681761954,0.04057009794019678,0.04130648129170546,0.03974353944461494,0.03956499553395265,0.038350585544703705,0.036255630489099584,0.03275467419672271,0.01715493642265658,0.008523743204260963,0.005548254168432693,0.004038647451103552,0.0037192047863770688,0.003379533806000275,0.003518576333359301,0.003610116568548355,0.003968539859362118,0.003971355949147404,0.0039534930285151275,0.0032681269532806177,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.024709807465072633,0.08915416098226467,0.07393345298909292,0.06387767260210499,0.06606587136929461,0.07004457100408568,0.07201431340390636,0.07901696829217557,0.08744349428464485,0.0896671490593343,0.09570759030635574,0.09687290531285518,0.09832252812745297,0.09606679716173232,0.09523234397173827,0.09005820585568458,0.08463441685862981,0.07909478554109417,0.07224291359849885,0.07107030768779515,0.06793954330848948,0.06130952380952381,0.05679440425659114,0.04883645670912889,0.044843313226423424,0.0448296653602653,0.041786473309163644,0.04123854004497492,0.040157690765735665,0.037201856891307825,0.03829206230993608,0.03794294799278442,0.037154598271220064,0.035265740663727854,0.03583331038091828,0.035369598596183376,0.037290510319555964,0.038202127375969716,0.0381914433880726,0.03845633772344971,0.03755347376401148,0.0382189948404357,0.03829330925304061,0.0359942495999132,0.034126984126984124,0.018520989565263803,0.010097281906619916,0.005766419405490281,0.004109264283644601,0.0035306675424911734,0.0033394291166414882,0.0038440700704316195,0.0038615923987602254,0.0038723906241985946,0.003939193654990086,0.003397985265373628,0.0034059435586495995,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.028936611950950496,0.10395030264415418,0.14634146341463414,0.07058080808080808,0.059990265271355564,0.05654342723004695,0.05451859427824654,0.054586016039760536,0.05478601323072769,0.05491353167773133,0.054880344178542616,0.05550212941338096,0.055806690227665,0.05735218361856791,0.05264049225210985,0.05403701165181631,0.0544484460450847,0.04943424956026358,0.04988417394966831,0.048152668367913015,0.04861343133979285,0.04693877551020408,0.046210461261868646,0.04211617675904391,0.04286786578076784,0.041927888570537,0.04302206722385906,0.0421455938697318,0.04172231762386313,0.04160535954669255,0.03875945445156587,0.041570301844274446,0.04048277596178024,0.04271617053756406,0.04098137457793269,0.043419082618755954,0.040437831183428787,0.041884955987554186,0.042948752492320955,0.0441566248599612,0.041933605125218404,0.04091099622746961,0.03840786183636681,0.03651701137828597,0.0313823642664613,0.01578888328004936,0.006950204501902011,0.005330088931375105,0.003968030618562503,0.0039077420302629645,0.003419638495359062,0.003193082596286982,0.003358640738336485,0.004064689094525642,0.004003518243304722,0.004509000791656627,0.003130310347911636,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2019:
            if g==0:
                emp=np.array([0.027831035872625316,0.09851967717677443,0.10679242246713164,0.06720889992029289,0.06063442721958606,0.06411217068959649,0.06414628378616896,0.06527540292862918,0.06853713944028199,0.07390304660192842,0.07433608144411237,0.07747696868001622,0.07789560306316234,0.07783351924265697,0.07810747817912601,0.07396349110522059,0.0733836612813025,0.06909834358004187,0.06626763670792275,0.062217817698229684,0.05889672145344578,0.05666891124012748,0.05298381449709771,0.049321269111024885,0.04455312067090772,0.04199535920052787,0.04248700252355927,0.041126582784734245,0.04150313838739653,0.04063048502551614,0.03937484863073585,0.0388898443828887,0.03932867465023916,0.03933063893352019,0.03788474246496615,0.03854110546131505,0.04154136522249274,0.04077576316622219,0.04089879734942772,0.041838068351927514,0.04049786685985672,0.040443677522446576,0.03897756082267338,0.03936113645973896,0.04100834083020785,0.02769466083342147,0.009578940603750722,0.005908797970327361,0.0036413739713055653,0.00409480901927962,0.003727750986290407,0.0035269062000643355,0.0035294762143045014,0.003819269258777282,0.003909321051043219,0.003961489192260753,0.003970100740301923,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.026608309017646242,0.08591387759357731,0.07116782095459043,0.06150451630697097,0.0607179351946468,0.06847420558342981,0.07220394231064915,0.07536111768884679,0.08222373121549408,0.09015292268114906,0.09261180267404334,0.0990950097875117,0.10146437460207212,0.10027147230404898,0.10110445127331366,0.0963149833318317,0.09245387507651054,0.08605164797825349,0.08334722917014063,0.07481741493517523,0.07136803343367332,0.06614624914988616,0.05957573060376799,0.05495062796455953,0.04855851095061946,0.04379390412368104,0.04299554699723192,0.041596402473299605,0.04084312370421562,0.039959939909864794,0.03788921245479855,0.03779674166020171,0.03733969944602577,0.03788093751773452,0.036615495655553394,0.03636564302072124,0.03985616645164832,0.04084275270441609,0.03892287553762723,0.040960528453083546,0.04073170731707317,0.040204281212648046,0.041415414976428026,0.04484927470534905,0.0481691368788143,0.03197767145135566,0.011468629136226902,0.007037204238255835,0.003819188695201462,0.004163462303428889,0.003695430352168997,0.0037164781690329136,0.0040901393773609485,0.003950946687875212,0.0038949910415206047,0.004098470440116793,0.0034420786499741083,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.02905376272760439,0.11112547675997156,0.14241702397967285,0.07291328353361481,0.06055091924452532,0.05975013579576317,0.056088625261688764,0.05518968816841157,0.054850547665069894,0.0576531705227078,0.056060360214181405,0.055858927572520714,0.054326831524252564,0.05539556618126494,0.05511050508493836,0.051611998878609476,0.05431344748609445,0.052145039181830256,0.04918804424570487,0.04961822046128414,0.046425409473218236,0.0471915733303688,0.04639189839042743,0.043691910257490245,0.04054773039119599,0.0401968142773747,0.04197845804988662,0.040656763096168884,0.04216315307057745,0.04130103014116749,0.04086048480667315,0.039982947105575685,0.04131764985445256,0.04078034034930587,0.0391539892743789,0.04071656790190885,0.04322656399333716,0.040708773628028286,0.0428747191612282,0.04271560825077148,0.04026402640264026,0.040683073832245106,0.03653970666891873,0.033872998214128876,0.0338475447816014,0.02341165021548728,0.007689252071274543,0.0047803917023988875,0.0034635592474096684,0.004026155735130351,0.0037600716204118172,0.003337334231095758,0.0029688130512480542,0.003687591829679352,0.003923651060565832,0.0038245079444047137,0.004498122830629737,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2020:
            if g==0:
                emp=np.array([0.0269715592224414,0.09230346655401633,0.09960510681940524,0.0655555805480609,0.06022855981760654,0.06020528148846008,0.0635154962068892,0.06415848535665022,0.06712063433177501,0.06883890143507695,0.07223376458874753,0.07393295446140764,0.07284936931815694,0.07250060493858161,0.07343960572855404,0.07296163541110899,0.06813426572247552,0.06751764085899103,0.06434095552076666,0.05994100291618962,0.05640995926614094,0.052014018252013336,0.0505221437439239,0.04659835372271442,0.042596959613405004,0.03959644387719157,0.03776149371461414,0.03821563964995921,0.03773399863545153,0.036567997447275694,0.0357951671270306,0.03524241191989732,0.03660935820329071,0.03625687561731533,0.03563249907162617,0.03461399857680189,0.03570146138685952,0.036897497879773936,0.03751886831583976,0.03772931773733452,0.037664304529021315,0.03564701966278515,0.035214159687807486,0.03412579735364438,0.03616278198638173,0.03408241837444563,0.010099597577880547,0.006590666761422344,0.003506678174180865,0.0033038813349910955,0.00403625112075974,0.003462481770152957,0.00333903640939197,0.0035492307757895806,0.004102597766534664,0.003912706549415428,0.0041106378608756385,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.022963483146067415,0.08190119084817554,0.06992958479309029,0.0628149257796541,0.06002606846401866,0.06271047899297041,0.06995398184839575,0.07401858872447108,0.08034087569791361,0.08275256222547585,0.08737533998186764,0.09163380764615121,0.09318521442467646,0.09165133394664214,0.09493325678197216,0.09267834982898998,0.0871732123671959,0.08417449820164752,0.07788951801459196,0.07328683715266246,0.06544215004084852,0.0595560210642693,0.05611883989625088,0.05075571593362714,0.04560328415040457,0.040255478729637875,0.03702726473175022,0.03567564318345756,0.03439887728052394,0.033644214162348876,0.033130020331300206,0.03229626784456821,0.033001457771160946,0.03309960500933893,0.032947057486934786,0.03121959356148008,0.03291817403551407,0.0335690504361225,0.035907419424616054,0.03568560261283932,0.035091052188780635,0.03389508018483284,0.034524101474154606,0.034480860783180606,0.036716816927846195,0.03519623405769336,0.010914927768860353,0.006431563302256452,0.003581164145598375,0.0032698595883823814,0.003716975077548401,0.0033131020658165823,0.0034313195720306927,0.00371042867292966,0.0037875839883778246,0.003689064558629776,0.003996194100856327,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.030979635298815388,0.10270574225985711,0.12928062884572017,0.06829623531646772,0.060431051171194426,0.05770008398394973,0.05707701056538266,0.054298381988829386,0.05390039296563641,0.054925240644678075,0.05709218919562743,0.05623210127666408,0.05251352421163742,0.05334987593052109,0.05194595467513592,0.053244920993227994,0.04909531907775516,0.05086078351633455,0.050792393026941364,0.04659516867971678,0.047377768491433346,0.04447201543975737,0.04492544759159692,0.042440991511801696,0.03959063507640544,0.03893740902474527,0.03849572269747806,0.04075563611646086,0.04106911999037912,0.039491780732202504,0.038460313922760996,0.03818855599522643,0.04021725863542048,0.039414146225291734,0.03831794065631755,0.03800840359212369,0.03848474873820496,0.040225945323425376,0.03913031720706347,0.03977303286182972,0.040237556869261996,0.03739895914073746,0.03590421790146037,0.033770733924108155,0.03560874704491726,0.0329686026911979,0.009284267386900743,0.006749770220588236,0.003432192202763355,0.003337903081599809,0.004355527163971079,0.003611861474489331,0.003246753246753247,0.003388032878649501,0.004417611544691504,0.004136348540201081,0.0042250816208949495,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2021:
            if g==0:
                emp=np.array([0.03530281812042967,0.08849569205007136,0.09893212758238822,0.06565222500711063,0.05972525888122633,0.06041284754672777,0.062249494571269263,0.0643936551861709,0.0663268659164846,0.06950629207203268,0.07009315106151992,0.07357149529141838,0.07332780843891248,0.07611966084652534,0.07717352916818479,0.07656026446699651,0.07387949501670948,0.07064507917122914,0.06717698032008318,0.06471997416907607,0.05873246751093194,0.05467679883592007,0.052160214413341274,0.04924752999015067,0.044892248063748,0.04209585752484649,0.03798821682596769,0.037473422465144485,0.038412688411351315,0.036940606574201354,0.03820443212591077,0.03719447938705685,0.035440822080472806,0.037013558208685696,0.036697101820705735,0.03616992318810042,0.03550875982902871,0.03656223517973113,0.037786943456390096,0.03750303263109439,0.03802546555261034,0.039052712233153056,0.03532279605992884,0.03587701334932909,0.038721603090152,0.04155501141612854,0.012938178827544618,0.008924025574504238,0.0043676572141781765,0.0037420221032027244,0.0036744679266402748,0.004330105138537484,0.003711347716093068,0.0035976166237393775,0.0037135148968118897,0.003978624913367776,0.004048974170831459,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.03312158168291606,0.07365112624410686,0.06883305647840532,0.05971128608923885,0.058914938179852716,0.06274842874129438,0.06794734969761651,0.07221414575564124,0.07858201506306524,0.08421052631578947,0.08747099767981438,0.09116161616161617,0.0933960126869053,0.09944720531576302,0.10068800137029318,0.10076813655761024,0.09562734785875282,0.09100359381032998,0.083759203118233,0.07841873756759028,0.07073910645339217,0.0635401756897084,0.058347826086956524,0.05484525174146901,0.046430678466076694,0.04269956114339936,0.036675245671502106,0.03593690556319686,0.036190133237306445,0.03471789762112343,0.03601738770440902,0.034630881422530055,0.03272808787267429,0.03459402438646024,0.03225213072536636,0.03348112778535698,0.03321002419825884,0.03343843345502821,0.03481256890848953,0.03533300818295128,0.034965785589695424,0.03820408163265306,0.03414048865619546,0.034925062903402256,0.040599590685325516,0.04352793328001828,0.014315998127907938,0.008530219040955815,0.004107167142662859,0.004061323292092523,0.0036848229622651963,0.003722887665911298,0.0037067198337592316,0.0036594024796548145,0.004020234291799787,0.003913431738194043,0.003933741871604806,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.037484054557943285,0.10334025785603587,0.1290311986863711,0.0715931639249824,0.06053557958259995,0.058077266352161164,0.05655163944492202,0.05657316461670059,0.05407171676990396,0.05480205782827588,0.052715304443225454,0.0559813744212206,0.05325960419091967,0.05279211637728766,0.05365905696607638,0.052352392376382784,0.05213164217466615,0.05028656453212829,0.05059475752193337,0.05102121077056186,0.04672582856847171,0.04581342198213172,0.045972602739726025,0.04364980823883233,0.04335381766141931,0.04149215390629363,0.039301187980433264,0.039009939367092114,0.04063524358539618,0.03916331552727927,0.04039147654741252,0.03975807735158364,0.038153556288271315,0.039433092030911145,0.04114207291604511,0.03885871859084386,0.03780749545979858,0.03968603690443404,0.04076131800429066,0.039673057079237496,0.041085145515525265,0.039901342833653056,0.036505103463662224,0.03682896379525593,0.03684361549497848,0.039582089552238804,0.011560359527181296,0.009317832108052659,0.004628147285693494,0.003422720914312926,0.003664112891015353,0.004937322611163671,0.003715975598426904,0.00353583076782394,0.0034067955018239923,0.004043818088541509,0.004164206470058112,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2022:
            if g==0:
                emp=np.array([0.03171742217847666,0.09023733853418692,0.10037695080766063,0.06597528689317064,0.061282881678656864,0.06183257470642656,0.062887031761407,0.06415801594835915,0.06692232007726012,0.07029298641643361,0.07057763616662968,0.07340860767737908,0.07366565347038836,0.07229574566299367,0.07444859500017413,0.07269105886408028,0.07179795581761528,0.07143165050559877,0.06721229859174929,0.0636136465261341,0.05969282266423995,0.056346239899478366,0.05191112715117363,0.05064069382094373,0.04662376282941855,0.042811054125886365,0.040476855450647414,0.03809406338160434,0.036164943237818784,0.0376112122385287,0.036177014983446464,0.03718980346083517,0.0364753662071428,0.03581774749969811,0.035657033517154074,0.03703455772196294,0.03656818549804535,0.03604098097260336,0.03637223614278481,0.03793810591416702,0.0367392188912863,0.037842293232978,0.037726248110802885,0.03812701451682034,0.04079571297180082,0.04562805116824323,0.015308246507551374,0.0062395413127230796,0.0050338711346832295,0.0038749869394108932,0.003830507820283699,0.003688594331454247,0.004421114080190347,0.0038389266057866473,0.0036551406635436743,0.004027207421511092,0.004030191096599365,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.02907851198235235,0.07534431541992978,0.07128947002364724,0.06198276158098966,0.05868897234551041,0.06190698917546439,0.06625881723665296,0.06999745579442819,0.07530495394573064,0.08295383516385392,0.08464255966912715,0.09016159424427568,0.08959553541827826,0.0906528231320997,0.09378008858078182,0.09190772610765287,0.09153170348331321,0.08953546822791922,0.08409130919546975,0.07636270140555365,0.06947380131271554,0.06417419884963024,0.05614436325096223,0.05563394476919976,0.04829138530795989,0.04232711048491253,0.03902539748090027,0.03580801306350965,0.03378457229548372,0.03460870606550506,0.032825140012445554,0.033869135717481846,0.03344982526210684,0.032169264748247495,0.03220502001178989,0.032311465358675656,0.033734733965325815,0.03265078701769049,0.033147640032149886,0.03531588248288049,0.03402451286789684,0.03658635078745457,0.03631749843106224,0.03686358283351135,0.04040653756352149,0.04801223241590214,0.01580368944313545,0.006153675573788668,0.004689999186705343,0.003732367308853395,0.004207725927735701,0.0036396214793661457,0.0038727976872306768,0.0037232833105957253,0.003844239172520604,0.004210526315789474,0.0041403996153435195,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.034356332374600965,0.10513036164844407,0.129464431591674,0.06996781220535163,0.06387679101180332,0.061758160237388726,0.05951524628616106,0.058318576102290125,0.05853968620878962,0.057632137669013296,0.05651271266413222,0.0566556211104825,0.05773577152249846,0.053938668193887644,0.055117101419566446,0.053474391620507704,0.05206420815191733,0.05332783278327833,0.05033328798802884,0.05086459164671455,0.049911844015764366,0.04851828094932649,0.04767789105138503,0.0456474428726877,0.044956140350877194,0.0432949977668602,0.041928313420394554,0.04038011369969903,0.03854531418015385,0.04061371841155235,0.03952888995444737,0.040510471204188485,0.03950090715217876,0.03946623025114874,0.03910904702251826,0.04175765008525022,0.03940163703076489,0.03943117492751622,0.03959683225341973,0.04056032934545354,0.03945392491467577,0.03909823567850142,0.039134997790543524,0.03939044620012933,0.04118488838008014,0.043243869920584314,0.014812803571967298,0.006325407051657491,0.005377743082661116,0.004017606569968391,0.0034532897128316978,0.0037375671835423487,0.004969430473150017,0.003954569900977569,0.0034660421545667447,0.0038438885272327103,0.00391998257785521,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2023:
            if g==0:
                emp=np.array([0.03171742217847666,0.09023733853418692,0.10037695080766063,0.06597528689317064,0.061282881678656864,0.06183257470642656,0.062887031761407,0.06415801594835915,0.06692232007726012,0.07029298641643361,0.07057763616662968,0.07340860767737908,0.07366565347038836,0.07229574566299367,0.07444859500017413,0.07269105886408028,0.07179795581761528,0.07143165050559877,0.06721229859174929,0.0636136465261341,0.05969282266423995,0.056346239899478366,0.05191112715117363,0.05064069382094373,0.04662376282941855,0.042811054125886365,0.040476855450647414,0.03809406338160434,0.036164943237818784,0.0376112122385287,0.036177014983446464,0.03718980346083517,0.0364753662071428,0.03581774749969811,0.035657033517154074,0.03703455772196294,0.03656818549804535,0.03604098097260336,0.03637223614278481,0.03793810591416702,0.0367392188912863,0.037842293232978,0.037726248110802885,0.03812701451682034,0.04079571297180082,0.04562805116824323,0.015308246507551374,0.0062395413127230796,0.0050338711346832295,0.0038749869394108932,0.003830507820283699,0.003688594331454247,0.004421114080190347,0.0038389266057866473,0.0036551406635436743,0.004027207421511092,0.004030191096599365,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.02907851198235235,0.07534431541992978,0.07128947002364724,0.06198276158098966,0.05868897234551041,0.06190698917546439,0.06625881723665296,0.06999745579442819,0.07530495394573064,0.08295383516385392,0.08464255966912715,0.09016159424427568,0.08959553541827826,0.0906528231320997,0.09378008858078182,0.09190772610765287,0.09153170348331321,0.08953546822791922,0.08409130919546975,0.07636270140555365,0.06947380131271554,0.06417419884963024,0.05614436325096223,0.05563394476919976,0.04829138530795989,0.04232711048491253,0.03902539748090027,0.03580801306350965,0.03378457229548372,0.03460870606550506,0.032825140012445554,0.033869135717481846,0.03344982526210684,0.032169264748247495,0.03220502001178989,0.032311465358675656,0.033734733965325815,0.03265078701769049,0.033147640032149886,0.03531588248288049,0.03402451286789684,0.03658635078745457,0.03631749843106224,0.03686358283351135,0.04040653756352149,0.04801223241590214,0.01580368944313545,0.006153675573788668,0.004689999186705343,0.003732367308853395,0.004207725927735701,0.0036396214793661457,0.0038727976872306768,0.0037232833105957253,0.003844239172520604,0.004210526315789474,0.0041403996153435195,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.034356332374600965,0.10513036164844407,0.129464431591674,0.06996781220535163,0.06387679101180332,0.061758160237388726,0.05951524628616106,0.058318576102290125,0.05853968620878962,0.057632137669013296,0.05651271266413222,0.0566556211104825,0.05773577152249846,0.053938668193887644,0.055117101419566446,0.053474391620507704,0.05206420815191733,0.05332783278327833,0.05033328798802884,0.05086459164671455,0.049911844015764366,0.04851828094932649,0.04767789105138503,0.0456474428726877,0.044956140350877194,0.0432949977668602,0.041928313420394554,0.04038011369969903,0.03854531418015385,0.04061371841155235,0.03952888995444737,0.040510471204188485,0.03950090715217876,0.03946623025114874,0.03910904702251826,0.04175765008525022,0.03940163703076489,0.03943117492751622,0.03959683225341973,0.04056032934545354,0.03945392491467577,0.03909823567850142,0.039134997790543524,0.03939044620012933,0.04118488838008014,0.043243869920584314,0.014812803571967298,0.006325407051657491,0.005377743082661116,0.004017606569968391,0.0034532897128316978,0.0037375671835423487,0.004969430473150017,0.003954569900977569,0.0034660421545667447,0.0038438885272327103,0.00391998257785521,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2024:
            if g==0:
                emp=np.array([0.03171742217847666,0.09023733853418692,0.10037695080766063,0.06597528689317064,0.061282881678656864,0.06183257470642656,0.062887031761407,0.06415801594835915,0.06692232007726012,0.07029298641643361,0.07057763616662968,0.07340860767737908,0.07366565347038836,0.07229574566299367,0.07444859500017413,0.07269105886408028,0.07179795581761528,0.07143165050559877,0.06721229859174929,0.0636136465261341,0.05969282266423995,0.056346239899478366,0.05191112715117363,0.05064069382094373,0.04662376282941855,0.042811054125886365,0.040476855450647414,0.03809406338160434,0.036164943237818784,0.0376112122385287,0.036177014983446464,0.03718980346083517,0.0364753662071428,0.03581774749969811,0.035657033517154074,0.03703455772196294,0.03656818549804535,0.03604098097260336,0.03637223614278481,0.03793810591416702,0.0367392188912863,0.037842293232978,0.037726248110802885,0.03812701451682034,0.04079571297180082,0.04562805116824323,0.015308246507551374,0.0062395413127230796,0.0050338711346832295,0.0038749869394108932,0.003830507820283699,0.003688594331454247,0.004421114080190347,0.0038389266057866473,0.0036551406635436743,0.004027207421511092,0.004030191096599365,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.02907851198235235,0.07534431541992978,0.07128947002364724,0.06198276158098966,0.05868897234551041,0.06190698917546439,0.06625881723665296,0.06999745579442819,0.07530495394573064,0.08295383516385392,0.08464255966912715,0.09016159424427568,0.08959553541827826,0.0906528231320997,0.09378008858078182,0.09190772610765287,0.09153170348331321,0.08953546822791922,0.08409130919546975,0.07636270140555365,0.06947380131271554,0.06417419884963024,0.05614436325096223,0.05563394476919976,0.04829138530795989,0.04232711048491253,0.03902539748090027,0.03580801306350965,0.03378457229548372,0.03460870606550506,0.032825140012445554,0.033869135717481846,0.03344982526210684,0.032169264748247495,0.03220502001178989,0.032311465358675656,0.033734733965325815,0.03265078701769049,0.033147640032149886,0.03531588248288049,0.03402451286789684,0.03658635078745457,0.03631749843106224,0.03686358283351135,0.04040653756352149,0.04801223241590214,0.01580368944313545,0.006153675573788668,0.004689999186705343,0.003732367308853395,0.004207725927735701,0.0036396214793661457,0.0038727976872306768,0.0037232833105957253,0.003844239172520604,0.004210526315789474,0.0041403996153435195,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.034356332374600965,0.10513036164844407,0.129464431591674,0.06996781220535163,0.06387679101180332,0.061758160237388726,0.05951524628616106,0.058318576102290125,0.05853968620878962,0.057632137669013296,0.05651271266413222,0.0566556211104825,0.05773577152249846,0.053938668193887644,0.055117101419566446,0.053474391620507704,0.05206420815191733,0.05332783278327833,0.05033328798802884,0.05086459164671455,0.049911844015764366,0.04851828094932649,0.04767789105138503,0.0456474428726877,0.044956140350877194,0.0432949977668602,0.041928313420394554,0.04038011369969903,0.03854531418015385,0.04061371841155235,0.03952888995444737,0.040510471204188485,0.03950090715217876,0.03946623025114874,0.03910904702251826,0.04175765008525022,0.03940163703076489,0.03943117492751622,0.03959683225341973,0.04056032934545354,0.03945392491467577,0.03909823567850142,0.039134997790543524,0.03939044620012933,0.04118488838008014,0.043243869920584314,0.014812803571967298,0.006325407051657491,0.005377743082661116,0.004017606569968391,0.0034532897128316978,0.0037375671835423487,0.004969430473150017,0.003954569900977569,0.0034660421545667447,0.0038438885272327103,0.00391998257785521,0.0,0.0,0.0,0.0,0.0])
        else:
            print("Error: Unknown year in Outsider toteuma")

        return self.map_ratios(emp)
        
    def tyotjakso_stats(self):
        '''
        Päättyneiden työttömyysjaksojen jakauma
        '''
        d=[]
        
    def pensioner_stats(self,g=0):
        '''
        Eläkkeellä olevien osuus väestöstö
        Lähde: Tilastokeskus
        '''
        ### pensioner_stats
        if self.year==2018:
            if g==0:
                emp=np.array([0.00815830824657873,0.009178503768329344,0.01205365192419135,0.015006256088721998,0.016280247305277655,0.01721856561348197,0.01819644267327982,0.018721527925619104,0.019476092822835238,0.021027328744573578,0.020649194905288076,0.019492111057156696,0.020110805895074177,0.020793480277716183,0.022003214133814293,0.022054399413524998,0.023859959477349507,0.02391130440116902,0.024836095285224468,0.025283128875377717,0.025753486317179136,0.02610969387755102,0.029068547351592457,0.029162677508410693,0.030382196499675676,0.03113443171189904,0.03375099071558077,0.03783236306066744,0.03923434873164009,0.04190306046836739,0.04513125962458346,0.0477851879875702,0.051855925100098794,0.05641127490232824,0.06042643073677984,0.06495431605512864,0.07051470610949429,0.07701658725666446,0.08906369983226714,0.09904746166533737,0.11325483679138086,0.13001732167480184,0.16523501754825723,0.20050133034479134,0.28336747936670925,0.5382153430166862,0.7420933636678326,0.849397058918306,0.8864515821831782,0.906562869738004,0.9833022230387841,0.9921194468001222,0.9926654434037294,0.9932949179518616,0.9941494874133116,0.9942819028841275,0.9955329685016927,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.007298255369430736,0.008321964529331514,0.010803534447052326,0.013503673793605613,0.014490404564315353,0.016714126532128264,0.01622185776054868,0.01699800897447327,0.01805303619245055,0.018668596237337194,0.01814700502972108,0.01769008830472416,0.017646887809983428,0.02009420112551994,0.019958332075243817,0.02006493316563807,0.021869578818644597,0.021543435244279704,0.023427060529383335,0.02246795529874168,0.02319090180241708,0.024583333333333332,0.025916183416033956,0.026212821040863758,0.0275709872002354,0.02885137172143503,0.031003875484435554,0.034665282823040995,0.03601496725912067,0.03816231791259805,0.04105380748463973,0.04436359189164399,0.04755561853478815,0.051678726884582325,0.055636654088743215,0.05777034437376618,0.06232149593145444,0.06640718722508064,0.07800345721694037,0.08505287070341022,0.0989061569285753,0.1130736261636319,0.1465135310551119,0.1809477310331733,0.2632804232804233,0.5221371193723146,0.7349661226964752,0.8551627050733662,0.8940547375075731,0.9133754823877166,0.9836739020964194,0.9913314929955368,0.9920481682841319,0.9933066625634713,0.9943952412425644,0.9945872801082544,0.99535893405195,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.009018361123726724,0.010035043007327174,0.013303769401330377,0.016508838383838383,0.01807009004623996,0.01772300469483568,0.020171027586010967,0.02044504687676494,0.020899149453219926,0.02338606125180996,0.02315138478085507,0.02129413380958923,0.022574723980164926,0.021492759429912425,0.02404809619238477,0.024043865661411926,0.02585034013605442,0.026279173558058335,0.0262451300410656,0.02809830245201376,0.028316070831941195,0.027636054421768707,0.03222091128715096,0.03211253397595763,0.033193405799115956,0.03341749170236305,0.03649810594672599,0.04099944329829387,0.04245373020415951,0.045643803024136745,0.0492087117645272,0.05120678408349641,0.05615623166540944,0.06114382292007415,0.06521620738481647,0.07213828773649109,0.07870791628753412,0.08762598728824827,0.1001239424475939,0.11304205262726454,0.12760351665418643,0.14696101718597177,0.18395650404140257,0.22005492965640938,0.3034545354529952,0.5542935666610578,0.74922060463919,0.8436314127632456,0.8788484268587832,0.8997502570882915,0.9829305439811489,0.9929074006047077,0.9932827185233271,0.993283173340252,0.9939037335840587,0.9939765256600007,0.9957070029514354,1.0,1.0,1.0,1.0,1.0])
        elif self.year==2019:
            if g==0:
                emp=np.array([0.008068880751470435,0.009419016066423508,0.012068555573953137,0.014810787039233934,0.01693457945997434,0.017710538871643484,0.01853968255722471,0.01904464407172475,0.019812701153918682,0.02088851443739078,0.02160346107255131,0.021761415609942804,0.020271050842225285,0.021134461494982878,0.021365891090084733,0.02298592808465685,0.0230732126137473,0.024508162954640852,0.024927182086898682,0.025833241250721138,0.02624299507959013,0.027068909263205983,0.027614012476342376,0.030403795881985364,0.03081603318438301,0.03213125634524613,0.033231810696758346,0.0355494117971918,0.03988908569825059,0.041537438104250354,0.04415235646096917,0.04746473916482444,0.05050573015216868,0.054990029847493224,0.06016628625301777,0.06413102178703743,0.07023072579378724,0.07664808384827071,0.08331195793400867,0.09610120362612987,0.11070588156376614,0.12657651158150635,0.1543160528496691,0.19407008464540215,0.25009449762910574,0.43498409981705144,0.7184483824034856,0.8347710381481228,0.8788368391889069,0.9051291758027471,0.9676745662977533,0.9794899697608862,0.9832946321466454,0.984666914878984,0.9857970037026764,0.9881702507928998,0.9887800534288935,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.006287341948033903,0.00868870121294269,0.011019753676094299,0.013479969661449355,0.01466855654810957,0.015534542647626399,0.017743473046526646,0.016812692398768647,0.01780284018777125,0.019551236244104615,0.019219686491470725,0.019149479417855827,0.018724315564044684,0.018714260959972275,0.02023306051662762,0.02099288224164339,0.020898306566790054,0.022850832483860006,0.022789172363959758,0.02479759950178339,0.023380191133062514,0.024483278630355716,0.02634623943035158,0.02750514602786313,0.027860959426927366,0.029597625135937455,0.031231195089661812,0.032727499843857345,0.03610919143054596,0.0386579869804707,0.04054529744951838,0.04297905352986812,0.04698068741774554,0.05013903864706884,0.05507592371540405,0.05805258946555197,0.06230957151876149,0.06752272788583452,0.07255630059038816,0.08533217824462613,0.09531165311653117,0.11037161795066826,0.13367503563205788,0.16795104261106075,0.22084786399302528,0.408213716108453,0.7022185217017619,0.8293809915819104,0.8766674850642442,0.9066005462886844,0.9721739610049365,0.9843319697334296,0.9867656636707047,0.9876853609728565,0.9893536911531771,0.9908922879108516,0.9925066252398794,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.009850419554906968,0.010149330919904324,0.013117357471811975,0.016141604417018514,0.019200602371839116,0.01988653509566057,0.019335892067922772,0.02127659574468085,0.021822562120066114,0.02222579263067695,0.02398723565363189,0.02437335180202978,0.021817786120405885,0.02355466202999348,0.022498721663541846,0.02497897392767031,0.025248118660704547,0.026165493425421703,0.02706519180983761,0.02686888299965889,0.029105799026117752,0.02965453989605625,0.028881785522333173,0.0333024457361076,0.03377110694183865,0.0346648875545548,0.035232426303854876,0.03837132375052625,0.043668979965955215,0.04441688922803001,0.04775941547241996,0.05195042479978075,0.05403077288659181,0.0598410210479176,0.0652566487906315,0.0702094541085229,0.07815188006881298,0.0857734398107069,0.09406761527762919,0.10687022900763359,0.1261001100110011,0.14278140521234445,0.17495707006728034,0.22018912667974352,0.27934113126518617,0.46175448352564996,0.7346782431052093,0.8401610847143354,0.8810061933135696,0.90365780531681,0.96317517159057,0.9746479697883428,0.979823600622586,0.9816484687851114,0.9822403162521757,0.985448213674948,0.9850534816179075,1.0,1.0,1.0,1.0,1.0])
        elif self.year==2020:
            if g==0:
                emp=np.array([0.008668962562270342,0.010414476369606504,0.012871404847779148,0.015829308453601604,0.016952356865845224,0.01864003472510215,0.019025893686628728,0.019966365527927517,0.020160317380460372,0.020843236920042175,0.021657447959674454,0.02260662557893639,0.022800051857783443,0.02152519513363386,0.022154657165800874,0.022142129706208758,0.02387051248153201,0.0240866665336109,0.025320477320648616,0.026040480107346692,0.02704941827423637,0.027396599201834487,0.02770623705486995,0.028616829879579985,0.03192088762883069,0.03162733173820363,0.03279454584201873,0.0340953972506648,0.03646004438394766,0.04075556024595648,0.042379627065363974,0.04629988291888723,0.048817586907355354,0.05255622216846666,0.05668255568618073,0.06250927313407323,0.06702683910877197,0.07357187625486142,0.08062203467967335,0.08807099026171522,0.10281860250060887,0.12102195319561455,0.1472996545165693,0.17974692691125094,0.22036626242351715,0.33067727777802647,0.6877158110093645,0.8236439048441884,0.8646534240660114,0.891831113884628,0.9659077470524129,0.9758952009398933,0.9813992367979322,0.9856308964800747,0.9871505550596482,0.9885706734507509,0.9892388977879819,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.007022471910112359,0.008887963059403535,0.01269554962017413,0.015320713604793682,0.015675379021746587,0.016315187183259767,0.016681579956538413,0.019261342790754556,0.017690273288275053,0.01882869692532943,0.02031391659111514,0.02000114292245271,0.02018778019003581,0.01969296228150874,0.019520597100617196,0.021005478374042798,0.022203652859018742,0.02236338322311173,0.02383165722978112,0.023967674083914536,0.025917683184494465,0.02493381047976492,0.02478778589955199,0.02697506581087876,0.02924202760590195,0.02871205906480722,0.030343007915567283,0.03176845395527771,0.033775144238266025,0.037271157167530225,0.03926274039262741,0.04260290634402407,0.044632610651034396,0.04923604519428029,0.0515791865485117,0.05724055489144033,0.06147303305625362,0.06496436727843051,0.07111183214362968,0.07728757295068801,0.090536543002144,0.10421310138624626,0.12951306575111038,0.16263518533806653,0.2025824066437246,0.3130986917729487,0.6724719101123595,0.819564923658965,0.8620182799722059,0.8890445964883357,0.9709862017328057,0.9799264992482878,0.9845725710580352,0.9870529722902028,0.9879368044205775,0.9894598155467721,0.9899687372570342,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.010315453214428325,0.011940989679809473,0.01304726007538417,0.016337903302409525,0.01822933470994386,0.02096488226694454,0.021370207416719043,0.02067138826510048,0.02263036147264569,0.022857776914754917,0.023000979328233768,0.02521210823542007,0.025412323525531074,0.02335742798575898,0.02478871723098455,0.02327878103837472,0.025537372104045275,0.025809949844110072,0.026809297411516112,0.028113286130778844,0.02818115336397827,0.02985938792390405,0.030624688210187906,0.03025859394828121,0.03459974765175943,0.03454260441160004,0.03524608376847017,0.03642234054605189,0.03914494452962929,0.044239963324382736,0.04549651373810054,0.04999685949375039,0.05300256316367631,0.055876399142653015,0.06178592482384976,0.06777799137670612,0.07258064516129033,0.08217938523129233,0.09013223721571703,0.09885440757274243,0.11510066199907375,0.13783080500498285,0.1650862432820282,0.19685866848443537,0.2381501182033097,0.3482558637831043,0.7029597119063695,0.8277228860294118,0.8672885681598169,0.8946176312809203,0.9608292923720201,0.971863902631499,0.9782259025378292,0.9842088206699466,0.9863643056987189,0.9876815313547296,0.9885090583189297,1.0,1.0,1.0,1.0,1.0])
        elif self.year==2021:
            if g==0:
                emp=np.array([0.008317836083086269,0.00963616883288378,0.01324884484667965,0.01532627396088437,0.01691800219684237,0.017959487925742285,0.01922109032790749,0.019399045652694135,0.020403505041026927,0.020028818561127072,0.021154869844332472,0.02241022616182843,0.022400870125616052,0.02310254158687341,0.021771006093076965,0.022998512306788996,0.02293708211866156,0.024409873849951837,0.025011211823069354,0.02552581179498841,0.026064393641928134,0.02826732174211062,0.028395672027000197,0.028488359550850686,0.029621469532634996,0.032144941632533786,0.03248843338575241,0.03399669195262644,0.035748178360744676,0.03839349250958553,0.04234585742558562,0.044449234385225134,0.04788236190823729,0.051546022075103864,0.05475569996093736,0.06039457476987825,0.0668361993732445,0.07166141554533617,0.07945320023776783,0.08618636694698945,0.09779679006581095,0.11375418854853533,0.14102669368496074,0.1715697722775969,0.20000352033792707,0.25097939640310957,0.6507004619337206,0.8116074570076746,0.8629257009896767,0.8907785292797896,0.9632018994886389,0.9737852482547864,0.9781592736801463,0.9816066220606167,0.9850413424765564,0.9866840410298213,0.9877330929936725,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.0066922580425994495,0.007962283918281823,0.011489479512735327,0.01474651194916425,0.016046213093709884,0.016443010022082555,0.017043433265418323,0.016971114341697742,0.019297661897704245,0.017553579238956115,0.018996519721577725,0.020622895622895623,0.01945514272768464,0.02060416550337819,0.02012618116417825,0.02054054054054054,0.0222389181066867,0.023166711218034392,0.02367547278764256,0.023758159863278516,0.024186431329288473,0.02708315792427942,0.025942028985507248,0.026129383064397615,0.028348082595870207,0.02941525323211956,0.030036265793167993,0.031752070469111236,0.0339695114632097,0.0354029144351725,0.0386048437176568,0.04172355232925976,0.044704902808467034,0.0475008532158481,0.05178122509044086,0.05556502955889041,0.0614969543570773,0.06527270715787145,0.07075523704520396,0.07752127025415921,0.08707902857909566,0.10084353741496599,0.12300938045375218,0.15635597855814462,0.1848277006471597,0.23834685250771165,0.6412465930677532,0.808460255099295,0.8623963008295934,0.8915008068854223,0.9675569346705823,0.9782292003884753,0.9827019741091236,0.9850073734229068,0.9882321618743344,0.9887587329936439,0.9900719848002355,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.009943414123573087,0.011310053747485739,0.015008210180623973,0.015906035972604492,0.017789791299974857,0.019475965829402014,0.02139874739039666,0.021826976963690528,0.021509348184349606,0.022504057883298026,0.02331321996708722,0.024197556700761243,0.025346597523547464,0.025600917670368633,0.023415831021975676,0.025456484073037453,0.02363524613063642,0.02565303648186928,0.02634695085849615,0.027293463726698303,0.0279423559545678,0.029451485559941825,0.03084931506849315,0.030847336037303757,0.03089485646939978,0.03487463003294801,0.03494060097833683,0.03624131343614164,0.037526845258279644,0.04138407058399856,0.04608687113351445,0.04717491644119051,0.05105982100800754,0.05559119093435963,0.057730174831433854,0.0652241199808661,0.0721754443894117,0.07805012393280088,0.0881511634303317,0.0948514636398197,0.10851455155252623,0.12666483968210468,0.15904400691616932,0.18678356599704915,0.2151793400286944,0.2636119402985075,0.6601543307996879,0.814754658916054,0.8634551011497599,0.8900562516741569,0.9588468643066953,0.9693412961210974,0.973616573251169,0.9782058706983265,0.9818505230787784,0.9846093490659987,0.9853942011871096,1.0,1.0,1.0,1.0,1.0])
        elif self.year==2022:
            if g==0:
                emp=np.array([0.007200892518843515,0.009593487825441574,0.012506770472141205,0.016582319125435684,0.016801970306662462,0.018222087688242378,0.01892292443499231,0.01931944394770993,0.01946939558855563,0.020872854570498214,0.020365258745128473,0.02108997716962315,0.022337572340604427,0.022611876717480404,0.02291402406317131,0.022401653374971457,0.022695449475717416,0.023163181992820057,0.02484066032268268,0.025303513368851793,0.02637088979134169,0.02698793322240394,0.02836421456077746,0.028947364133228456,0.02892923299654908,0.030147785439550975,0.03282994575701724,0.03257506739590658,0.03467237823727651,0.03657674998843538,0.03884098310004018,0.04329891013859308,0.04528237828613203,0.04880105489264272,0.052830528852938874,0.05607943480354248,0.062424597119917144,0.06953456240403263,0.07446208110170457,0.08311383834453866,0.09119097240547043,0.10615542557689597,0.13098506168325724,0.16054325057873536,0.18924008052889066,0.22660079723332005,0.6151265126392491,0.8028083418391663,0.8482235293958025,0.8805779915663735,0.9567420774280186,0.9698876535843176,0.9755864900752287,0.9790750803383734,0.9823358281950942,0.984882870461534,0.9863477599203689,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.005615160934523212,0.007865244396435322,0.011093337042704132,0.014697297482916108,0.01618299761010584,0.017372711479353202,0.01751746732190018,0.01672815163465208,0.017239233258650736,0.019704140250617615,0.01789355774477985,0.018957345971563982,0.02061001215603934,0.019816349884172038,0.020742207917251246,0.020730642480917105,0.020237460353102983,0.022206451994440993,0.023208731881931812,0.023711575819906298,0.02455779285793748,0.025034237195288963,0.0272772912366821,0.02666513087799119,0.02671811511590517,0.029059528002817893,0.030205598654906934,0.030092727590832216,0.0326467499124752,0.0358960541284953,0.0359054138145613,0.040099129177709705,0.04320186387086038,0.045421081271406163,0.04855573826440383,0.053740036787247085,0.057448686195803796,0.06371360913776292,0.06809678223996009,0.07485641705323613,0.08291436801913199,0.09411764705882353,0.11697454227946193,0.1436748555309068,0.1753605274000824,0.2136502641089797,0.5986724900867766,0.7942953764275419,0.841732859815111,0.8794390471485811,0.9608002823248365,0.973598745730444,0.9798450880925108,0.9828899499772624,0.985093202057636,0.9879622132253711,0.9882198952879581,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.008786624103163818,0.011321731254447824,0.013920203901578276,0.01846734076795526,0.017420943003219086,0.019071463897131553,0.020328381548084442,0.021910736260767776,0.021699557918460517,0.022041568890378813,0.022836959745477097,0.023222608367682317,0.024065132525169508,0.025407403550788774,0.025085840209091374,0.024072664269025806,0.025153438598331846,0.02411991199119912,0.026472588763433547,0.026895450917797287,0.028183986724745903,0.028941629249518923,0.029451137884872823,0.031229597388465723,0.031140350877192982,0.031236042876284054,0.03545429285912754,0.03505740720098094,0.036698006562077806,0.03725744584837545,0.04177655238551906,0.04649869109947644,0.047362892701403696,0.05218102851387927,0.05710531944147392,0.058418832819837875,0.06740050804403049,0.07535551567030237,0.08082737996344908,0.09137125963584118,0.09946757679180887,0.11819320409496842,0.14499558108705257,0.17741164562656395,0.20311963365769892,0.23955133035766044,0.6315805351917217,0.8113213072507907,0.854714198976494,0.8817169359841659,0.9526838725312008,0.9661765614381912,0.9713278920579466,0.9752602106994843,0.9795784543325526,0.9818035276976967,0.9844756245527798,1.0,1.0,1.0,1.0,1.0])
        elif self.year==2023:
            if g==0:
                emp=np.array([0.007200892518843515,0.009593487825441574,0.012506770472141205,0.016582319125435684,0.016801970306662462,0.018222087688242378,0.01892292443499231,0.01931944394770993,0.01946939558855563,0.020872854570498214,0.020365258745128473,0.02108997716962315,0.022337572340604427,0.022611876717480404,0.02291402406317131,0.022401653374971457,0.022695449475717416,0.023163181992820057,0.02484066032268268,0.025303513368851793,0.02637088979134169,0.02698793322240394,0.02836421456077746,0.028947364133228456,0.02892923299654908,0.030147785439550975,0.03282994575701724,0.03257506739590658,0.03467237823727651,0.03657674998843538,0.03884098310004018,0.04329891013859308,0.04528237828613203,0.04880105489264272,0.052830528852938874,0.05607943480354248,0.062424597119917144,0.06953456240403263,0.07446208110170457,0.08311383834453866,0.09119097240547043,0.10615542557689597,0.13098506168325724,0.16054325057873536,0.18924008052889066,0.22660079723332005,0.6151265126392491,0.8028083418391663,0.8482235293958025,0.8805779915663735,0.9567420774280186,0.9698876535843176,0.9755864900752287,0.9790750803383734,0.9823358281950942,0.984882870461534,0.9863477599203689,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.005615160934523212,0.007865244396435322,0.011093337042704132,0.014697297482916108,0.01618299761010584,0.017372711479353202,0.01751746732190018,0.01672815163465208,0.017239233258650736,0.019704140250617615,0.01789355774477985,0.018957345971563982,0.02061001215603934,0.019816349884172038,0.020742207917251246,0.020730642480917105,0.020237460353102983,0.022206451994440993,0.023208731881931812,0.023711575819906298,0.02455779285793748,0.025034237195288963,0.0272772912366821,0.02666513087799119,0.02671811511590517,0.029059528002817893,0.030205598654906934,0.030092727590832216,0.0326467499124752,0.0358960541284953,0.0359054138145613,0.040099129177709705,0.04320186387086038,0.045421081271406163,0.04855573826440383,0.053740036787247085,0.057448686195803796,0.06371360913776292,0.06809678223996009,0.07485641705323613,0.08291436801913199,0.09411764705882353,0.11697454227946193,0.1436748555309068,0.1753605274000824,0.2136502641089797,0.5986724900867766,0.7942953764275419,0.841732859815111,0.8794390471485811,0.9608002823248365,0.973598745730444,0.9798450880925108,0.9828899499772624,0.985093202057636,0.9879622132253711,0.9882198952879581,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.008786624103163818,0.011321731254447824,0.013920203901578276,0.01846734076795526,0.017420943003219086,0.019071463897131553,0.020328381548084442,0.021910736260767776,0.021699557918460517,0.022041568890378813,0.022836959745477097,0.023222608367682317,0.024065132525169508,0.025407403550788774,0.025085840209091374,0.024072664269025806,0.025153438598331846,0.02411991199119912,0.026472588763433547,0.026895450917797287,0.028183986724745903,0.028941629249518923,0.029451137884872823,0.031229597388465723,0.031140350877192982,0.031236042876284054,0.03545429285912754,0.03505740720098094,0.036698006562077806,0.03725744584837545,0.04177655238551906,0.04649869109947644,0.047362892701403696,0.05218102851387927,0.05710531944147392,0.058418832819837875,0.06740050804403049,0.07535551567030237,0.08082737996344908,0.09137125963584118,0.09946757679180887,0.11819320409496842,0.14499558108705257,0.17741164562656395,0.20311963365769892,0.23955133035766044,0.6315805351917217,0.8113213072507907,0.854714198976494,0.8817169359841659,0.9526838725312008,0.9661765614381912,0.9713278920579466,0.9752602106994843,0.9795784543325526,0.9818035276976967,0.9844756245527798,1.0,1.0,1.0,1.0,1.0])
        elif self.year==2024:
            if g==0:
                emp=np.array([0.007200892518843515,0.009593487825441574,0.012506770472141205,0.016582319125435684,0.016801970306662462,0.018222087688242378,0.01892292443499231,0.01931944394770993,0.01946939558855563,0.020872854570498214,0.020365258745128473,0.02108997716962315,0.022337572340604427,0.022611876717480404,0.02291402406317131,0.022401653374971457,0.022695449475717416,0.023163181992820057,0.02484066032268268,0.025303513368851793,0.02637088979134169,0.02698793322240394,0.02836421456077746,0.028947364133228456,0.02892923299654908,0.030147785439550975,0.03282994575701724,0.03257506739590658,0.03467237823727651,0.03657674998843538,0.03884098310004018,0.04329891013859308,0.04528237828613203,0.04880105489264272,0.052830528852938874,0.05607943480354248,0.062424597119917144,0.06953456240403263,0.07446208110170457,0.08311383834453866,0.09119097240547043,0.10615542557689597,0.13098506168325724,0.16054325057873536,0.18924008052889066,0.22660079723332005,0.6151265126392491,0.8028083418391663,0.8482235293958025,0.8805779915663735,0.9567420774280186,0.9698876535843176,0.9755864900752287,0.9790750803383734,0.9823358281950942,0.984882870461534,0.9863477599203689,1.0,1.0,1.0,1.0,1.0])
            elif g==1:
                emp=np.array([0.005615160934523212,0.007865244396435322,0.011093337042704132,0.014697297482916108,0.01618299761010584,0.017372711479353202,0.01751746732190018,0.01672815163465208,0.017239233258650736,0.019704140250617615,0.01789355774477985,0.018957345971563982,0.02061001215603934,0.019816349884172038,0.020742207917251246,0.020730642480917105,0.020237460353102983,0.022206451994440993,0.023208731881931812,0.023711575819906298,0.02455779285793748,0.025034237195288963,0.0272772912366821,0.02666513087799119,0.02671811511590517,0.029059528002817893,0.030205598654906934,0.030092727590832216,0.0326467499124752,0.0358960541284953,0.0359054138145613,0.040099129177709705,0.04320186387086038,0.045421081271406163,0.04855573826440383,0.053740036787247085,0.057448686195803796,0.06371360913776292,0.06809678223996009,0.07485641705323613,0.08291436801913199,0.09411764705882353,0.11697454227946193,0.1436748555309068,0.1753605274000824,0.2136502641089797,0.5986724900867766,0.7942953764275419,0.841732859815111,0.8794390471485811,0.9608002823248365,0.973598745730444,0.9798450880925108,0.9828899499772624,0.985093202057636,0.9879622132253711,0.9882198952879581,1.0,1.0,1.0,1.0,1.0])
            elif g==2:
                emp=np.array([0.008786624103163818,0.011321731254447824,0.013920203901578276,0.01846734076795526,0.017420943003219086,0.019071463897131553,0.020328381548084442,0.021910736260767776,0.021699557918460517,0.022041568890378813,0.022836959745477097,0.023222608367682317,0.024065132525169508,0.025407403550788774,0.025085840209091374,0.024072664269025806,0.025153438598331846,0.02411991199119912,0.026472588763433547,0.026895450917797287,0.028183986724745903,0.028941629249518923,0.029451137884872823,0.031229597388465723,0.031140350877192982,0.031236042876284054,0.03545429285912754,0.03505740720098094,0.036698006562077806,0.03725744584837545,0.04177655238551906,0.04649869109947644,0.047362892701403696,0.05218102851387927,0.05710531944147392,0.058418832819837875,0.06740050804403049,0.07535551567030237,0.08082737996344908,0.09137125963584118,0.09946757679180887,0.11819320409496842,0.14499558108705257,0.17741164562656395,0.20311963365769892,0.23955133035766044,0.6315805351917217,0.8113213072507907,0.854714198976494,0.8817169359841659,0.9526838725312008,0.9661765614381912,0.9713278920579466,0.9752602106994843,0.9795784543325526,0.9818035276976967,0.9844756245527798,1.0,1.0,1.0,1.0,1.0])
        else:
            print("Error: Unknown year in pensioner_stats")

        return self.map_ratios(emp)
        
    def workforce_stats(self,g=0):
        '''
        Työvoimassa olevat ilman vanhempainvapailla olevia
        Lähde: Tilastokeskus
        päivitä
        '''
        ### workforce_stats
        if self.year==2018:
            if g==0:
                emp=np.array([0.3181491294908291,0.558092569300448,0.5693335758478059,0.6300800063085344,0.6462517499979803,0.6765948879796048,0.723513542945856,0.7597828374177618,0.7866217612168203,0.8088585208056105,0.8220157385799118,0.8341033225293217,0.8412054934343528,0.8485958588483105,0.8565026136772933,0.861212160334949,0.8655066326505007,0.873000713899305,0.8793345082216864,0.8825784965376666,0.8855402140384357,0.8932135770975056,0.8946271634723764,0.9014748882102562,0.9043462029535203,0.9062506543046431,0.9055480036817483,0.9032754313597027,0.9032145858922405,0.9032145912459795,0.9018307181299816,0.8990202030288962,0.8968009717013063,0.8941000678351264,0.8914792266353821,0.8867656222621825,0.8817546761284527,0.875363386478994,0.8629060968287157,0.8535446691524046,0.8421708043178069,0.8263637062251368,0.7935240484671398,0.7607572416756145,0.6822712460246153,0.4428201887459897,0.2475306109162868,0.14334640653562306,0.10793875201639613,0.08830015560576959,0.011870988050200895,0.0030431175557493373,0.002291976000585478,0.0014420233962421794,0.0009611506821382399,0.0009111920016478887,0.0004710077185132063,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.3603948008618892,0.6125852660300136,0.628917575590225,0.6315615277685841,0.6483078319502075,0.6826792125789278,0.7289100939317131,0.7534694362723247,0.7712994155077597,0.7921562952243126,0.7982395976223137,0.807099350100545,0.8159141785620839,0.8220271592855396,0.8268667532232253,0.8357073912661968,0.8423911497881296,0.8501992698085337,0.8608591817587354,0.8664828557181826,0.8709801941978204,0.8816369047619047,0.8870688109045256,0.8961489806125151,0.9010445784905106,0.9026831474223695,0.9049568696087011,0.9035806953814219,0.9035480422290525,0.9064510965263326,0.9040836591572022,0.9015807013789097,0.9003825988380332,0.9013557348415536,0.8977607623874184,0.8960846676902829,0.8900414937759336,0.8867265602090054,0.8754861711322386,0.8701354896286881,0.8582606812151405,0.844148398897109,0.8121454976437057,0.7808609325412971,0.7010846560846561,0.4577139654666275,0.2530911391737629,0.1373923872434891,0.10004478044411665,0.08169800476229576,0.011528981474119425,0.0037408735584737235,0.0026929525938722628,0.001615633174334513,0.0009517514871116987,0.0012028266426101339,0.0006737031214911295,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.275903458119769,0.5035998725708825,0.5097495761053867,0.6285984848484848,0.6441956680457532,0.6705105633802817,0.7181169919599989,0.766096238563199,0.8019441069258809,0.8255607463869082,0.8457918795375101,0.8611072949580986,0.8664968083066217,0.8751645584110813,0.8861384741313614,0.8867169294037012,0.8886221155128717,0.8958021579900765,0.8978098346846373,0.8986741373571507,0.9001002338790511,0.9047902494331066,0.902185516040227,0.9068007958079973,0.9076478274165299,0.9098181611869167,0.9061391377547953,0.9029701673379834,0.9028811295554283,0.8999780859656262,0.8995777771027611,0.8964597046788827,0.8932193445645796,0.8868444008286992,0.885197690883346,0.877446576834082,0.873467858480972,0.8640002127489828,0.8503260225251926,0.836953848676121,0.8260809274204732,0.8085790135531646,0.7749025992905739,0.7406535508099321,0.6634578359645745,0.4279264120253519,0.24197008265881073,0.14930042582775702,0.11583272358867563,0.09490230644924343,0.012212994626282364,0.002345361553024951,0.0018909994072986932,0.0012684136181498457,0.0009705498771647812,0.0006195573606856434,0.00026831231553528306,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2019:
            if g==0:
                emp=np.array([0.3216100590899641,0.5627727286925642,0.5686920343826545,0.6147773761743454,0.6264540911946379,0.6541304081713727,0.6920257390219162,0.7380044974841817,0.7610679261216863,0.7710261960800168,0.7866192452134758,0.7883512139409403,0.7947144104337461,0.7971181137616692,0.7976661262662346,0.8111256783573162,0.8167258660721168,0.8233310832031755,0.8337791078900684,0.8466752355722393,0.8588735140089767,0.8672752674199187,0.8764251877082139,0.8808331675861327,0.8934903456898065,0.8990629116694319,0.9014912864266674,0.9019868220468907,0.8977892780860564,0.9003454696451654,0.8998577540431962,0.8988403717417578,0.8969364754532613,0.8935459133842993,0.8905679369367675,0.8871481300674886,0.8786540840168763,0.873644963248052,0.8686396872022273,0.8554147460929333,0.8430681665727549,0.8284312067262829,0.8033650106408914,0.764013235583589,0.7069930653356493,0.5306780403384601,0.24542718734322225,0.15732840805716947,0.11572941591226649,0.08943384665321097,0.026855438575648344,0.015612096033453177,0.012029607911500385,0.010305916125311466,0.009215588791755302,0.0070739486869761435,0.006340289276620682,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.379845769070446,0.6263858478434644,0.6213777729163446,0.6160649056142841,0.6266589185780804,0.6520013011787397,0.6802194639301213,0.7220185251650815,0.7322795406383895,0.7299422349629715,0.7397655799447443,0.7296131898146994,0.7309471790549654,0.7333401872258455,0.7261817286144724,0.7440621890569348,0.7568559305349718,0.765568890924844,0.7820051345221946,0.8006623035357339,0.8234769499162035,0.8389553766056863,0.8530156341537619,0.8611503956601165,0.880827620345362,0.8905572561141727,0.8958345621338956,0.8985930622064419,0.8961299519995024,0.898761711529309,0.9015160111990771,0.9011377287482796,0.8998255440271784,0.8975654049145906,0.8951503206284873,0.8934966752200425,0.8862232713897505,0.8808168550540884,0.8799722170277562,0.8657750825707943,0.8575609756097561,0.8443170705204824,0.8211544786755839,0.7841965095194923,0.7292938099389713,0.5576177551631732,0.2664583479502674,0.1618291419921927,0.11763101181220503,0.08775093479010315,0.022227737789912026,0.010614689446806234,0.008206330597889801,0.0071578839345271695,0.005686686920620083,0.004446706490584233,0.0032593134119223858,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.26337434910948226,0.499159609541664,0.5160062958489645,0.6134898467344068,0.6262492638111954,0.6562595151640057,0.7038320141137111,0.7539904698032821,0.789856311604983,0.812110157197062,0.8334729104822073,0.8470892380671814,0.8584816418125268,0.8608960402974929,0.8691505239179966,0.8781891676576976,0.8765958016092618,0.8810932754815068,0.8855530812579422,0.8926881676087447,0.89427007810175,0.8955951582341511,0.8998347412626657,0.9005159395121488,0.9061530710342508,0.907568567224691,0.9071480107194393,0.9053805818873395,0.8994486041726103,0.9019292277610218,0.8981994968873155,0.896543014735236,0.8940474068793441,0.889526421854008,0.8859855532450477,0.8807995849149348,0.871084896644002,0.8664730714420156,0.8573071573766984,0.8450544096150723,0.8285753575357536,0.8125453429320832,0.7855755426061988,0.7438299616476858,0.6846923207323274,0.503738325513747,0.2243960267361771,0.15282767412214626,0.11382782001232793,0.09111675851631879,0.03148313936138466,0.02060950262010012,0.01585288522511097,0.013453948316095763,0.012744490662890521,0.009701190883368054,0.009421265141318977,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2020:
            if g==0:
                emp=np.array([0.2681416490442783,0.5214669128609943,0.5450028778331288,0.5820538955205091,0.598510777395672,0.630670035445408,0.6793878349203266,0.7240045034565871,0.7539714353781546,0.7726008570447003,0.7760676159290609,0.7863551154607208,0.7913666702139676,0.7968974844363977,0.7993751279853476,0.8066128641811499,0.8168889716933442,0.8262348681180496,0.8342799028690597,0.846192003981671,0.8594171404532975,0.8687067301577922,0.8760414583579086,0.8850480457922312,0.8920654765843555,0.9011781568053372,0.9050230355073346,0.9059234106794432,0.9057532792030305,0.9035223564037869,0.9059897757971407,0.902971176764144,0.9006965209798262,0.8978963500135972,0.8955723205814675,0.8930450598711599,0.887549170438615,0.8805042950333004,0.874328384063876,0.8672936082014583,0.8537686535618015,0.8382171144427808,0.8140025984719301,0.7834350409374062,0.7415884545914864,0.6337978065006594,0.2749347673497756,0.16703077814449419,0.13003130765876453,0.10326812496655866,0.02853778218010361,0.019107735310188174,0.013974258048458631,0.009885407315685185,0.007792193300601804,0.006457403223752696,0.005939268991668446,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.2992275280898876,0.5717112800749922,0.5789138576794622,0.5707550228080468,0.5885147547217933,0.6217396384381485,0.6657594682223941,0.7027782186296118,0.7240592377434366,0.7339945977377256,0.72815700665642,0.7334218470160269,0.7304475582262239,0.7332669908996287,0.7339281173658401,0.74024659462511,0.7548094440636345,0.773624748180569,0.7857484226162919,0.8027628773287454,0.8256871108478425,0.8420942395258582,0.8555339395056097,0.867741799558127,0.8798921552900426,0.8946270339329264,0.9008866381369094,0.904043533190213,0.9068695315730096,0.9059539645028717,0.9079393083518986,0.9072550851406239,0.9055063093830626,0.9016810067668943,0.9010736196319018,0.9002251813961247,0.8938167960012151,0.8906529455465977,0.8842742807700626,0.8788081597686994,0.8673433386707194,0.8565914650720304,0.8321752636311616,0.7998569030518177,0.758738374904013,0.6503913733647162,0.29128216642801147,0.17099845123257051,0.13269014912608904,0.10598191959992306,0.023799336827468178,0.015117768249902555,0.010672214416945856,0.008605036709560275,0.007367629128077412,0.005849802371541502,0.005572923746092157,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.23705576999866898,0.47122254564699656,0.5110918979867953,0.5933527682329715,0.6085068000695508,0.6396004324526675,0.6930162016182592,0.7452307882835624,0.7838836330128724,0.811207116351675,0.8239782252017017,0.8392883839054147,0.8522857822017113,0.8605279779731668,0.8648221386048552,0.8729791337371897,0.8789684993230539,0.87884498805553,0.8828113831218275,0.8896211306345966,0.8931471700587525,0.8953192207897261,0.8965489772102075,0.9023542920263352,0.9042387978786685,0.9077292796777481,0.9091594328777599,0.9078032881686734,0.9046370268330512,0.9010907483047021,0.9040402432423827,0.8986872683876641,0.8958867325765898,0.8941116932603002,0.8900710215310332,0.8858649383461951,0.881281544876015,0.8703556445200032,0.8643824873576895,0.8557790566342172,0.8401939684528836,0.8198427638135312,0.7958299333126987,0.7670131788229948,0.7244385342789598,0.6172042396366026,0.2585873682715398,0.16306310505641783,0.12737246619144005,0.10055433033319425,0.033276227532739046,0.023097702370473792,0.017276301679971406,0.011165777921810094,0.008216757473126196,0.00706500407596389,0.0063056142372447345,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2021:
            if g==0:
                emp=np.array([0.32672943084267514,0.526355617086141,0.5507809274883235,0.5875245200552368,0.6041395951309694,0.629800128353527,0.6776626305483082,0.7247540156985774,0.7544179737717709,0.7772802468163134,0.7831828538952035,0.7759339368449871,0.787140041898857,0.7898370142120121,0.7908211865444649,0.794178733704763,0.8055320119436744,0.8158555640169878,0.822810770494472,0.8346875262900104,0.8508922843898327,0.8622193355276654,0.8723178517327148,0.8800437412174158,0.8893261921284372,0.89607408705743,0.9046327148564914,0.9048925721762651,0.9055231267354427,0.9057898282014694,0.9020818655565228,0.9020191581018061,0.902916235048447,0.8973782424909034,0.8956343778332713,0.8922273728874687,0.8879875197160552,0.8827769915847692,0.8741131398933538,0.8687166063842897,0.8581178965666905,0.8423912841650774,0.8195205789242657,0.7895250214389873,0.7586976059083269,0.7056314031351298,0.3122942436144745,0.17139627691662676,0.13084085785762267,0.10371960555064677,0.031351471326436106,0.02048328532777062,0.016758684118372107,0.013595820060029198,0.010422914521305691,0.008471696236940534,0.007259317594783856,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.3751741006216666,0.5872184389732844,0.5833911684219835,0.5754215259602744,0.5888232445090718,0.6148237576746349,0.6592619054524382,0.7043352514018448,0.7194701571906632,0.7378623844930888,0.7330188854915778,0.7111764276658428,0.7214738936580113,0.7195664032564911,0.7164890825859432,0.7213301821211097,0.7321838335141355,0.752721834193603,0.765163782491611,0.7856542076542408,0.8084326622170527,0.8279977420040027,0.8496956624016856,0.8592070959562241,0.8746833435791862,0.8874562208899375,0.9000840383862151,0.9011024868140551,0.9028005204540436,0.9062883773556671,0.903243957619543,0.903162938199474,0.9063192027079788,0.9006546492507214,0.8997179471457477,0.8978512960436562,0.8932773342975552,0.8913320057528488,0.8847574421168688,0.8785563323036905,0.871434321749631,0.8549387755102041,0.8381599040139617,0.8052729460671698,0.7720006637535262,0.7160687764195133,0.3243283886713293,0.17418802371204187,0.1319189446484428,0.10255513717052178,0.02681886186069707,0.01675299449660084,0.012243407935750189,0.01021355617455896,0.00718849840255591,0.0065924252770919785,0.00516470871578046,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.27828476106368366,0.4654927951989976,0.5181706865546635,0.5996275141501993,0.6194559457528669,0.644776499032419,0.6960633556441782,0.74517277999531,0.7893657903528787,0.8166981091395378,0.8333468222988292,0.8406914460241316,0.8528061901397026,0.8601076251675331,0.8651532905029865,0.8670272852884163,0.8788801903732134,0.8789892938403725,0.8804577584973332,0.8837208449257802,0.8933519065626127,0.8964409290513281,0.8949400410637439,0.9008803864786075,0.9039690406776881,0.9046919532249225,0.9091813913267679,0.9086826575384749,0.9082457330168419,0.9052912790472716,0.9009197734935026,0.9008753780041382,0.8995132673889151,0.8941018357310853,0.8915508085207948,0.8866034497312811,0.882697705134555,0.8742219774166896,0.8634688376698388,0.858876880464889,0.8448014713837498,0.8298437928199507,0.8008812538345697,0.7737770968108046,0.7453945480631277,0.6951940298507463,0.3002600985576197,0.16860453012121165,0.1297627710668025,0.10488407393077175,0.03588408079217515,0.024213576158940396,0.021273960300994023,0.016978083945499437,0.013657330640055473,0.010350967196789088,0.009353926473787253,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2022:
            if g==0:
                emp=np.array([0.3505057025018046,0.5400066309066343,0.566757534974143,0.605637127946483,0.624812757822506,0.6573765109593771,0.6990069186188052,0.7480525730205339,0.7853324569229041,0.8059085443793743,0.8205548207966588,0.8252301679675642,0.8304022374316293,0.8386802343246762,0.8403428878813035,0.8468872197307962,0.8508027608535618,0.8552623740580321,0.8608414626073033,0.8708339958394948,0.8753389458845815,0.8814597750314545,0.8891434128701712,0.8913232784726934,0.8971931915790814,0.902961846360856,0.9050400605114367,0.910447954775697,0.9108980888331448,0.9084203151774595,0.9093048506466777,0.9051276413408029,0.9043713726182114,0.9031744950690823,0.9003833257625957,0.8968612767778636,0.8915857440186736,0.8860683044031907,0.8818237941390654,0.8724161697769434,0.8660249027943274,0.8517401336881469,0.8269818770763052,0.7983365547245045,0.7673595117480025,0.7256979159701724,0.3567272584939849,0.18173134894161522,0.14496884529502238,0.11385966894121126,0.03774654836069502,0.025027376766086233,0.01874343081711314,0.016039789918428464,0.01305309091216842,0.01048450465381848,0.00890821603827859,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.4019185133192954,0.612813934647583,0.6087772986507164,0.6025205178393599,0.6189484465687948,0.6560871308298811,0.6953832781733694,0.741031675359369,0.7778192681105303,0.7921838259368397,0.8053824281241921,0.8072003654428139,0.8095093380484032,0.8150660079823606,0.8172539957635279,0.8217615412782018,0.8265360541162602,0.8297111091398326,0.8379789918432017,0.8528739572620272,0.860384914895984,0.8678444261846069,0.8794555698108998,0.8817922653842831,0.8922213452600193,0.8986732417517905,0.9039261378720391,0.9099259345658133,0.9107830551989731,0.9074306927728878,0.9123522090852519,0.9080301517915533,0.9061740722249958,0.9079414871482987,0.906208308771059,0.9025137952176578,0.8969169015287386,0.8935227747597159,0.8899697901942851,0.8818754141815771,0.8760225018343887,0.8646924215910621,0.8419056454473519,0.8162024484430204,0.7815135283614888,0.7363358354184042,0.38316763404402043,0.19783235391950327,0.1517065632878792,0.11537406004720346,0.03341748785188805,0.02138977546335181,0.015109365624829542,0.012306730331969077,0.010149897671331379,0.007422402159244264,0.007052035473875414,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.2990928916843137,0.46719932716568546,0.5247377712975697,0.6087537380536061,0.6306770690762173,0.6586658910888731,0.7026305590642409,0.7550734706816988,0.792845645735278,0.8196332628219088,0.8357272134691254,0.8432599704923145,0.8512951368148554,0.8622944606669919,0.8634317799990792,0.8720128981833907,0.8750694675908632,0.8808136389762317,0.8837039333714051,0.8887940344169624,0.8902929768731789,0.895075123878302,0.8988312559294427,0.9008542915611037,0.9021650378981434,0.9072504509699213,0.9061539831508343,0.9109699749855805,0.9110131224673167,0.909409937582031,0.9062574922081035,0.9022251308900524,0.902568673011427,0.8984075029898659,0.8945583427541325,0.8912087583380695,0.8862545865086086,0.8786138340466657,0.8736777980838456,0.8629569253723096,0.8560273037542662,0.8387878457852319,0.8120581087052585,0.7804706610059886,0.7532054951345163,0.7150599965219407,0.3302868829439494,0.16563034396372717,0.13823112730216555,0.11234527783521905,0.042075608869502,0.028664978068820658,0.02237749600939674,0.01977284950488785,0.015956284153005464,0.013546607148392696,0.010764396602681766,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2023:
            if g==0:
                emp=np.array([0.3505057025018045,0.5400066309066343,0.5671079905664129,0.6065891271447994,0.6257653297667556,0.6591822894505488,0.7010145476089678,0.7501118397206846,0.7879965767580304,0.8091268889433891,0.8245818015678255,0.8304705186679573,0.8361035492378855,0.8438322698838236,0.847116722680616,0.8533636415077644,0.8573350679226319,0.8606888879032496,0.866425218952481,0.8741358347097579,0.8785434219781725,0.8840055998787051,0.8907240777692127,0.8926507572840894,0.8983173612265009,0.9034735123453013,0.905450148680393,0.9106535257490754,0.9110010012546741,0.9085748906102706,0.9093048506466779,0.9051276413408029,0.9043713726182114,0.9031744950690823,0.9003833257625957,0.8968612767778636,0.8915857440186736,0.8860683044031907,0.8818237941390654,0.8724161697769434,0.8660249027943274,0.851740133688147,0.8269818770763052,0.7983365547245045,0.7673595117480025,0.7256979159701724,0.367331245145219,0.18917036461349418,0.1449688452950224,0.1138596689412113,0.03774654836069502,0.02502737676608624,0.01874343081711316,0.01603978991842847,0.013053090912168386,0.010484504653818505,0.008908216038278627,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.4019185133192954,0.612813934647583,0.6087772986507164,0.6025205178393599,0.6189484465687949,0.656087130829881,0.6953832781733694,0.7410316753593691,0.7778192681105303,0.7921838259368396,0.8053824281241921,0.8072003654428139,0.8095093380484031,0.8150660079823606,0.8172539957635279,0.8217615412782018,0.8265360541162601,0.8297111091398326,0.8379789918432017,0.8528739572620272,0.860384914895984,0.867844426184607,0.8794555698108998,0.8817922653842831,0.8922213452600193,0.8986732417517905,0.9039261378720391,0.9099259345658133,0.9107830551989731,0.9074306927728879,0.912352209085252,0.9080301517915533,0.9061740722249958,0.9079414871482987,0.906208308771059,0.9025137952176578,0.8969169015287386,0.8935227747597159,0.8899697901942851,0.8818754141815772,0.8760225018343887,0.8646924215910621,0.8419056454473519,0.8162024484430203,0.7815135283614888,0.7363358354184042,0.38316763404402043,0.19783235391950327,0.15170656328787924,0.11537406004720352,0.03341748785188803,0.021389775463351857,0.015109365624829563,0.012306730331969051,0.010149897671331343,0.007422402159244279,0.007052035473875451,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.29909289168431363,0.46719932716568546,0.5254386824821096,0.610657736450239,0.6325822129647163,0.6622774480712166,0.7066458170445661,0.7591920040820002,0.7981738854055304,0.8260699519499386,0.8437811750114589,0.8537406718931005,0.862697760427368,0.8725985317852867,0.8769794495977041,0.8849657417373271,0.8881340817290039,0.8916666666666666,0.8948714460617603,0.8953977121574886,0.896701929060361,0.9001667735728031,0.9019925857275255,0.9035092491838955,0.9044133771929824,0.908273782938812,0.9069741594887468,0.9113811169323376,0.9112189473103752,0.9097190884476534,0.9062574922081036,0.9022251308900524,0.902568673011427,0.8984075029898659,0.8945583427541324,0.8912087583380695,0.8862545865086086,0.8786138340466657,0.8736777980838456,0.8629569253723095,0.8560273037542663,0.838787845785232,0.8120581087052585,0.7804706610059887,0.7532054951345163,0.7150599965219407,0.3514948562464175,0.1805083753074851,0.13823112730216558,0.11234527783521908,0.04207560886950201,0.028664978068820623,0.022377496009396758,0.01977284950488789,0.01595628415300543,0.01354660714839273,0.010764396602681803,0.0,0.0,0.0,0.0,0.0])
        elif self.year==2024:
            if g==0:
                emp=np.array([0.3505057025018046,0.5400066309066343,0.5621052081251785,0.5990835650213159,0.617402418079561,0.6458556578740271,0.6858807003811032,0.7288085332153024,0.7604197684710399,0.7770856969704005,0.7876552202244242,0.7853064043001954,0.7874041047120504,0.7933432174785784,0.7951081819812723,0.8027441027270079,0.8090729254969122,0.8162787174643977,0.8282799567928548,0.8427537280061106,0.8533454292864051,0.8613674557710324,0.8746290844598359,0.8781034864440362,0.8890646899438921,0.8982077129423984,0.9025144219014871,0.9085773066838477,0.9101379553681472,0.90816873428944,0.9091020520257083,0.9049743619036675,0.9042686820602175,0.9031744950690823,0.9003833257625957,0.8968612767778636,0.8915857440186736,0.8860683044031907,0.8818237941390654,0.8724161697769434,0.8660249027943274,0.8517401336881469,0.8269818770763052,0.7983365547245045,0.7673595117480025,0.7256979159701724,0.3451521060471069,0.15728447071593044,0.14496884529502238,0.11385966894121126,0.03774654836069502,0.025027376766086233,0.01874343081711314,0.016039789918428464,0.01305309091216842,0.01048450465381848,0.00890821603827859,0.0,0.0,0.0,0.0,0.0])
            elif g==1:
                emp=np.array([0.4019185133192954,0.612813934647583,0.599973777242153,0.5894139645627215,0.6037271367350275,0.6327474533782134,0.6690332130496344,0.7039538118459909,0.7297086136051679,0.736054729013917,0.7401933798842965,0.7273528381080763,0.7237090369947153,0.7248872572291974,0.7244456389937408,0.7327520978383787,0.741645557833359,0.7526411734485143,0.770615227515834,0.7979277964489045,0.8157816124392784,0.8281626858280756,0.8512354528989868,0.8572839446581108,0.8761639831109586,0.8900847806019472,0.8985671894392787,0.9060817261692529,0.9093657642493881,0.9067214729147318,0.9119466118433132,0.9078272091228572,0.9060724255488422,0.9079414871482987,0.906208308771059,0.9025137952176578,0.8969169015287386,0.8935227747597159,0.8899697901942851,0.8818754141815771,0.8760225018343887,0.8646924215910621,0.8419056454473519,0.8162024484430204,0.7815135283614888,0.7363358354184042,0.3571939236785028,0.15692720596388024,0.1517065632878792,0.11537406004720346,0.03341748785188805,0.02138977546335181,0.015109365624829542,0.012306730331969077,0.010149897671331379,0.007422402159244264,0.007052035473875414,0.0,0.0,0.0,0.0,0.0])
            elif g==2:
                emp=np.array([0.2990928916843137,0.46719932716568546,0.5242366390082039,0.6087531654799102,0.6310776994240944,0.658963862369841,0.7027281877125721,0.7536632545846138,0.7911309233369118,0.8181166649268842,0.8351170605645519,0.8432599704923145,0.8510991724293853,0.8617991777279592,0.8657707249688038,0.8727361076156372,0.8765002931604656,0.879916261480281,0.8859446860698756,0.8875796595633166,0.8909092461335317,0.8945722257139891,0.8980227160206851,0.8989230282299616,0.9019653967768257,0.9063306452828497,0.9064616543636956,0.9110728871984426,0.9109101464869064,0.9096159956641483,0.9062574922081035,0.9021215146844779,0.9024649385715929,0.8984075029898659,0.8945583427541325,0.8912087583380695,0.8862545865086086,0.8786138340466657,0.8736777980838456,0.8629569253723096,0.8560273037542662,0.8387878457852319,0.8120581087052585,0.7804706610059886,0.7532054951345163,0.7150599965219407,0.33311028841571094,0.15764173546798066,0.13823112730216555,0.11234527783521905,0.042075608869502,0.028664978068820658,0.02237749600939674,0.01977284950488785,0.015956284153005464,0.013546607148392696,0.010764396602681766,0.0,0.0,0.0,0.0,0.0])
        else:
            print("Error: Unknown year in workforce_stats")

        return self.map_ratios(emp)

    def unemp_stats_tyossakayntitutkimus(self,g=0):
        '''
        Työttömien osuus väestöstö
        Lähde: Tilastokeskus, Työssäkäyntitilasto
        Lista Tilastokeskuksen tietokannoista / StatFin / Työssäkäynti / 115c -- Väestö pääasiallisen toiminnan, sukupuolen, iän (1-v) ja vuoden mukaan, 1987-2020
        https://statfin.stat.fi/PxWeb/pxweb/fi/StatFin/StatFin__tyokay/statfin_tyokay_pxt_115c.px/table/tableViewLayout1/
        '''
        emp_ratio=np.zeros(self.n_time)
        if self.year==2018:
            if g==0:
                emp_ratio=np.array([0.018,0.101,0.104,0.083,0.077,0.075,0.075,0.078,0.078,0.078,0.080,0.080,0.081,0.077,0.079,0.078,0.076,0.075,0.074,0.072,0.074,0.070,0.071,0.068,0.069,0.069,0.069,0.072,0.072,0.074,0.076,0.078,0.078,0.078,0.081,0.081,0.082,0.084,0.087,0.087,0.089,0.097,0.108,0.131,0.115,0.062,0.030,0,0,0,0,0,0])
            elif g==1: # naiset
                emp_ratio=np.array([0.016,0.082,0.073,0.063,0.062,0.060,0.060,0.065,0.066,0.066,0.069,0.070,0.072,0.071,0.071,0.070,0.071,0.070,0.069,0.070,0.070,0.065,0.066,0.064,0.065,0.064,0.065,0.065,0.066,0.066,0.068,0.067,0.070,0.070,0.069,0.071,0.071,0.072,0.074,0.076,0.076,0.083,0.097,0.116,0.105,0.057,0.031,0,0,0,0,0,0])
            else: # miehet
                emp_ratio=np.array([0.019,0.119,0.133,0.102,0.091,0.089,0.089,0.091,0.089,0.089,0.091,0.089,0.089,0.083,0.085,0.085,0.080,0.081,0.080,0.075,0.077,0.075,0.074,0.072,0.073,0.074,0.074,0.078,0.076,0.083,0.085,0.089,0.087,0.086,0.092,0.091,0.094,0.096,0.101,0.099,0.102,0.110,0.120,0.146,0.125,0.066,0.028,0,0,0,0,0,0])
        elif self.year==2019:
            if g==0:
                emp_ratio=np.array([0.019,0.100,0.104,0.083,0.076,0.072,0.077,0.077,0.077,0.079,0.079,0.077,0.079,0.080,0.078,0.079,0.078,0.076,0.074,0.075,0.074,0.074,0.070,0.071,0.069,0.071,0.070,0.071,0.073,0.073,0.075,0.077,0.080,0.080,0.081,0.083,0.083,0.086,0.087,0.089,0.091,0.097,0.105,0.117,0.116,0.079,0.030,0,0,0,0,0,0])
            elif g==1: # naiset
                emp_ratio=np.array([0.017,0.074,0.068,0.060,0.057,0.056,0.060,0.058,0.062,0.064,0.066,0.065,0.066,0.068,0.070,0.071,0.069,0.069,0.066,0.067,0.068,0.068,0.064,0.065,0.062,0.064,0.063,0.062,0.064,0.066,0.064,0.067,0.068,0.068,0.068,0.068,0.070,0.072,0.072,0.072,0.076,0.082,0.090,0.104,0.102,0.072,0.029,0,0,0,0,0,0])
            else: # miehet
                emp_ratio=np.array([0.021,0.124,0.137,0.104,0.094,0.088,0.093,0.094,0.092,0.093,0.090,0.089,0.090,0.092,0.086,0.087,0.086,0.083,0.083,0.082,0.079,0.080,0.077,0.077,0.075,0.078,0.078,0.080,0.081,0.080,0.086,0.086,0.092,0.091,0.094,0.098,0.097,0.099,0.103,0.107,0.107,0.112,0.121,0.131,0.130,0.087,0.031,0,0,0,0,0,0])
        elif self.year==2020:
            if g==0: # päivitä
                emp_ratio=np.array([0.022295,0.133904,0.141523,0.111656,0.099754,0.097140,0.100274,0.107174,0.111871,0.112053,0.107161,0.106812,0.109634,0.111049,0.110364,0.107872,0.109229,0.106739,0.104432,0.105435,0.104113,0.103623,0.102500,0.100202,0.102063,0.100063,0.101720,0.099358,0.100297,0.105315,0.103677,0.103766,0.105810,0.109568,0.109797,0.111986,0.115004,0.114500,0.115923,0.116622,0.121842,0.126491,0.133517,0.142857,0.151331,0.124418,0.047200,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000])
            elif g==1: # naiset
                emp_ratio=np.array([0.020506,0.105024,0.099553,0.084536,0.076902,0.078568,0.082257,0.089703,0.091449,0.094026,0.089670,0.090291,0.093467,0.099586,0.095507,0.094737,0.095768,0.093543,0.093834,0.091719,0.094233,0.094295,0.092932,0.088763,0.090522,0.088451,0.088742,0.087792,0.088632,0.093748,0.089958,0.089431,0.092863,0.091430,0.093587,0.094660,0.095772,0.096882,0.097421,0.096937,0.102396,0.107176,0.114036,0.123476,0.132931,0.109338,0.043312,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000])
            else: # miehet
                emp_ratio=np.array([0.023992,0.161418,0.180503,0.136877,0.121249,0.114809,0.117147,0.123625,0.131239,0.129130,0.123501,0.122287,0.124766,0.121804,0.124293,0.120119,0.121804,0.119073,0.114369,0.118336,0.113273,0.112462,0.111496,0.111108,0.112940,0.111158,0.114015,0.110258,0.111542,0.116281,0.116782,0.117832,0.118546,0.127203,0.125818,0.129102,0.134107,0.132057,0.134428,0.136395,0.141363,0.146163,0.153634,0.162861,0.170449,0.140159,0.051289,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000])
        elif self.year==2021: 
            if g==0:
                emp_ratio=np.array([0.0185302,0.086,0.100,0.080,0.075,0.073,0.071,0.078,0.082,0.082,0.082,0.079,0.083,0.083,0.081,0.083,0.079,0.080,0.078,0.078,0.079,0.078,0.075,0.077,0.073,0.075,0.073,0.074,0.074,0.074,0.076,0.076,0.079,0.080,0.084,0.085,0.087,0.091,0.092,0.093,0.095,0.102,0.108,0.124,0.140,0.148,0.056,0,0,0,0,0,0])
            elif g==1: # naiset
                emp_ratio=np.array([0.0163400,0.062,0.070,0.061,0.059,0.057,0.056,0.065,0.068,0.067,0.069,0.069,0.071,0.072,0.072,0.072,0.072,0.071,0.071,0.071,0.070,0.071,0.069,0.071,0.066,0.069,0.065,0.064,0.066,0.067,0.069,0.067,0.069,0.069,0.071,0.073,0.072,0.076,0.077,0.078,0.081,0.086,0.092,0.105,0.121,0.129,0.050,0,0,0,0,0,0])
            else: # miehet
                emp_ratio=np.array([0.021,0.124,0.137,0.104,0.094,0.088,0.093,0.094,0.092,0.093,0.090,0.089,0.090,0.092,0.086,0.087,0.086,0.083,0.083,0.082,0.079,0.080,0.077,0.077,0.075,0.078,0.078,0.080,0.081,0.080,0.086,0.086,0.092,0.091,0.094,0.098,0.097,0.099,0.103,0.107,0.107,0.112,0.121,0.131,0.130,0.087,0.031,0,0,0,0,0,0])
        elif self.year==2022: # 2022
            if g==0:
                emp_ratio=np.array([0.0175,0.0738,0.0866,0.0742,0.0681,0.0671,0.0704,0.0721,0.0763,0.0788,0.0788,0.0792,0.0804,0.0813,0.0811,0.0798,0.0808,0.0787,0.0780,0.0765,0.0757,0.0743,0.0754,0.0732,0.0736,0.0709,0.0736,0.0713,0.0715,0.0710,0.0706,0.0752,0.0745,0.0769,0.0785,0.0829,0.0825,0.0824,0.0876,0.0874,0.0898,0.0926,0.0973,0.1059,0.1281,0.1409,0.0496,0,0,0,0,0,0])
            elif g==1: # naiset
                emp_ratio=np.array([0.0160,0.0547,0.0579,0.0586,0.0541,0.0531,0.0576,0.0589,0.0629,0.0659,0.0670,0.0681,0.0701,0.0711,0.0719,0.0719,0.0703,0.0720,0.0681,0.0701,0.0685,0.0662,0.0693,0.0645,0.0686,0.0641,0.0653,0.0616,0.0621,0.0610,0.0620,0.0656,0.0651,0.0659,0.0667,0.0688,0.0689,0.0669,0.0723,0.0706,0.0741,0.0769,0.0818,0.0878,0.1075,0.1207,0.0440,0,0,0,0,0,0])
            else: # miehet
                emp_ratio=np.array([0.0189,0.0921,0.1136,0.0890,0.0810,0.0801,0.0823,0.0845,0.0887,0.0909,0.0899,0.0896,0.0899,0.0909,0.0896,0.0872,0.0905,0.0849,0.0871,0.0825,0.0823,0.0819,0.0810,0.0814,0.0784,0.0773,0.0814,0.0806,0.0804,0.0803,0.0789,0.0842,0.0835,0.0877,0.0902,0.0966,0.0960,0.0977,0.1028,0.1042,0.1056,0.1086,0.1130,0.1244,0.1495,0.1620,0.0555,0,0,0,0,0,0])
        elif self.year==2023: # 2022
            if g==0:
                emp_ratio=np.array([0.0175,0.0738,0.0866,0.0742,0.0681,0.0671,0.0704,0.0721,0.0763,0.0788,0.0788,0.0792,0.0804,0.0813,0.0811,0.0798,0.0808,0.0787,0.0780,0.0765,0.0757,0.0743,0.0754,0.0732,0.0736,0.0709,0.0736,0.0713,0.0715,0.0710,0.0706,0.0752,0.0745,0.0769,0.0785,0.0829,0.0825,0.0824,0.0876,0.0874,0.0898,0.0926,0.0973,0.1059,0.1281,0.1409,0.0496,0,0,0,0,0,0])
            elif g==1: # naiset
                emp_ratio=np.array([0.0160,0.0547,0.0579,0.0586,0.0541,0.0531,0.0576,0.0589,0.0629,0.0659,0.0670,0.0681,0.0701,0.0711,0.0719,0.0719,0.0703,0.0720,0.0681,0.0701,0.0685,0.0662,0.0693,0.0645,0.0686,0.0641,0.0653,0.0616,0.0621,0.0610,0.0620,0.0656,0.0651,0.0659,0.0667,0.0688,0.0689,0.0669,0.0723,0.0706,0.0741,0.0769,0.0818,0.0878,0.1075,0.1207,0.0440,0,0,0,0,0,0])
            else: # miehet
                emp_ratio=np.array([0.0189,0.0921,0.1136,0.0890,0.0810,0.0801,0.0823,0.0845,0.0887,0.0909,0.0899,0.0896,0.0899,0.0909,0.0896,0.0872,0.0905,0.0849,0.0871,0.0825,0.0823,0.0819,0.0810,0.0814,0.0784,0.0773,0.0814,0.0806,0.0804,0.0803,0.0789,0.0842,0.0835,0.0877,0.0902,0.0966,0.0960,0.0977,0.1028,0.1042,0.1056,0.1086,0.1130,0.1244,0.1495,0.1620,0.0555,0,0,0,0,0,0])
        elif self.year==2024: # 2022
            if g==0:
                emp_ratio=np.array([0.0175,0.0738,0.0866,0.0742,0.0681,0.0671,0.0704,0.0721,0.0763,0.0788,0.0788,0.0792,0.0804,0.0813,0.0811,0.0798,0.0808,0.0787,0.0780,0.0765,0.0757,0.0743,0.0754,0.0732,0.0736,0.0709,0.0736,0.0713,0.0715,0.0710,0.0706,0.0752,0.0745,0.0769,0.0785,0.0829,0.0825,0.0824,0.0876,0.0874,0.0898,0.0926,0.0973,0.1059,0.1281,0.1409,0.0496,0,0,0,0,0,0])
            elif g==1: # naiset
                emp_ratio=np.array([0.0160,0.0547,0.0579,0.0586,0.0541,0.0531,0.0576,0.0589,0.0629,0.0659,0.0670,0.0681,0.0701,0.0711,0.0719,0.0719,0.0703,0.0720,0.0681,0.0701,0.0685,0.0662,0.0693,0.0645,0.0686,0.0641,0.0653,0.0616,0.0621,0.0610,0.0620,0.0656,0.0651,0.0659,0.0667,0.0688,0.0689,0.0669,0.0723,0.0706,0.0741,0.0769,0.0818,0.0878,0.1075,0.1207,0.0440,0,0,0,0,0,0])
            else: # miehet
                emp_ratio=np.array([0.0189,0.0921,0.1136,0.0890,0.0810,0.0801,0.0823,0.0845,0.0887,0.0909,0.0899,0.0896,0.0899,0.0909,0.0896,0.0872,0.0905,0.0849,0.0871,0.0825,0.0823,0.0819,0.0810,0.0814,0.0784,0.0773,0.0814,0.0806,0.0804,0.0803,0.0789,0.0842,0.0835,0.0877,0.0902,0.0966,0.0960,0.0977,0.1028,0.1042,0.1056,0.1086,0.1130,0.1244,0.1495,0.1620,0.0555,0,0,0,0,0,0])
        else:
            print('Empstats, unknown year',self.year)
        
        return self.map_ratios(emp_ratio)
        
    def unemp_stats_tyovoimatutkimus(self,g=0):
        '''
        työttömien osuus väestöstö
        Lähde: Tilastokeskus, tyovoimatutkimus
        '''
        x=np.array([17.5,22.5,27.5,32.5,37.5,42.5,47.5,52.5,57.5,62.5,67.5,72.5])
        if self.year==2018:
            if g==0: # kaikki
                emp=np.array([25.8,13.6,8.5,7.6,5.2,4.7,5.1,5.5,6.0,8.0,0,0])/100
            elif g==2: # miehet
                emp=np.array([26.6,14.1,9.2,7.4,5.3,4.9,4.7,6.2,7.1,8.9,0,0])/100
            else: # naiset
                emp=np.array([25.2,13.0,7.6,7.8,5.0,4.4,5.4,4.8,5.0,7.0,0,0])/100
        elif self.year==2019:
            if g==0: # kaikki
                emp=np.array([26.0,13.7,7.3,6.6,4.5,3.8,3.6,4.8,6.1,6.7,0,0])/100
            elif g==2: # miehet
                emp=np.array([28.8,15.9,7.8,6.4,4.4,3.7,4.0,5.3,7.2,8.3,0,0])/100
            else: # naiset
                emp=np.array([23.8,11.2,6.7,6.9,4.5,3.8,3.1,4.2,5.1,5.1,0,0])/100
        elif self.year==2020:
            if g==0: # kaikki
                emp=np.array([28.9,17.4,8.8,7.1,5.2,4.5,4.4,4.9,6.6,7.9,0,0])/100
            elif g==2: # miehet
                emp=np.array([31.8,19.5,8.7,6.8,5.3,4.9,4.6,5.4,6.8,9.5,0,0])/100
            else: # naiset
                emp=np.array([26.7,14.6,8.9,7.4,5.2,4.2,4.1,4.4,6.4,6.5,0,0])/100
        elif self.year==2021: # päivitä
            if g==0: # kaikki
                emp=np.array([25.2,12.8,8.9,7.0,5.6,5.0,5.4,5.9,6.6,8.6,0,0])/100
            elif g==2: # miehet
                emp=np.array([25.7,14.4,10.1,7.8,5.7,5.4,6.1,6.8,7.1,9.3,0,0])/100
            else: # naiset
                emp=np.array([24.7,10.9,7.5,6.0,5.4,4.6,4.6,5.0,6.0,8.0,0,0])/100
        elif self.year==2022: # päivitä
            if g==0: # kaikki
                emp=np.array([20.0,10.9,7.9,5.0,4.6,4.7,5.5,5.9,5.8,9.3,0,0])/100
            elif g==2: # miehet
                emp=np.array([18.1,12.6,7.9,4.9,4.7,5.3,5.5,6.3,7.0,11.7,0,0])/100
            else: # naiset
                emp=np.array([21.6,9.1,7.8,5.0,4.5,4.0,5.4,5.5,4.7,6.8,0,0])/100
        elif self.year==2023: # päivitä
            if g==0: # kaikki
                emp=np.array([20.0,10.9,7.9,5.0,4.6,4.7,5.5,5.9,5.8,9.3,0,0])/100
            elif g==2: # miehet
                emp=np.array([18.1,12.6,7.9,4.9,4.7,5.3,5.5,6.3,7.0,11.7,0,0])/100
            else: # naiset
                emp=np.array([21.6,9.1,7.8,5.0,4.5,4.0,5.4,5.5,4.7,6.8,0,0])/100
        elif self.year==2024: # päivitä
            if g==0: # kaikki
                emp=np.array([20.0,10.9,7.9,5.0,4.6,4.7,5.5,5.9,5.8,9.3,0,0])/100
            elif g==2: # miehet
                emp=np.array([18.1,12.6,7.9,4.9,4.7,5.3,5.5,6.3,7.0,11.7,0,0])/100
            else: # naiset
                emp=np.array([21.6,9.1,7.8,5.0,4.5,4.0,5.4,5.5,4.7,6.8,0,0])/100
        else:
            print('Empstats, unknown year',self.year)
            
        f = interp1d(x, emp,fill_value='extrapolate')
        jasenyys_x = np.linspace(self.min_age, self.max_age+1, num=self.max_age-self.min_age+1, endpoint=True)
        rate=f(jasenyys_x)

        return self.map_ratios(rate)
        
    def unemp_stats(self,g=0,tyossakayntitutkimus=True):
        if tyossakayntitutkimus:
            return self.unemp_stats_tyossakayntitutkimus(g=g)
        else:
            return self.unemp_stats_tyovoimatutkimus(g=g)
        
    def unempratio_stats(self,g=0,tyossakayntitutkimus=False):
        '''
        Työttömien osuus työvoimasta
        Lähde: Tilastokeskus
        '''
        emp_ratio=self.emp_stats(g=g,tyossakayntitutkimus=tyossakayntitutkimus)
        unemp_ratio=self.unemp_stats(g=g,tyossakayntitutkimus=tyossakayntitutkimus)
        ratio=unemp_ratio/(emp_ratio+unemp_ratio)
        
        return ratio # ei mapata, on jo tehty!
            
    def get_demog(self,scale=None):
        '''
        Returns the demographic distribution of the population
        '''
        # vuosi 2019
        if self.year==2019:
            demog=np.array([58939,59711,
                            60796,59796,62211,64230,66911,69316,69568,72329,71682,72790,  # 20-29 y
                            71313,71434,68069,68967,70985,72961,74223,73437,70361,69800,  # 30-39 y
                            69056,69134,69773,69996,68516,65276,59488,61407,63138,65064,  # 40-49 y
                            66339,70970,72571,72862,73052,74260,74821,73880,73260,72650,  # 50-59 y
                            72007,69453,72098,73585,72476,72173,70726,72730,69771,71560,  # 60-69 y
                            73079,73689,72408,69492,61063,47990,44814,35182,49918,34273  # 70-79 y
                            ])
        elif self.year==2018: # 2018
            demog=np.array([59600,60710,
                            59640,61894,63720,66388,68734,69063,71766,71153,72182,70708,
                            70898,67638,68548,70664,72648,73972,73161,70145,69593,68880,
                            69052,69678,69956,68421,65258,59442,61378,63178,65147,66433,
                            71078,72753,73031,73207,74480,75114,74138,73574,72991,72416,
                            69831,72549,74158,73129,72894,71459,73497,70572,72530,74150,
                            74793,73683,70796,62308,49080,45971,36179,51476,35499,40134  # 70-79 y
                            ])
        elif self.year==2020: # 2020
            demog=np.array([58532,59035,
                            59870,60955,60148,62734,64703,67442,69911,70199,73077,72361,
                            73362,71860,71989,68479,69377,71361,73359,74548,73785,70641,
                            70010,69270,69281,69856,70114,68580,65326,59488,61412,63084,
                            65013,66251,70831,72384,72667,72812,73963,74540,73554,72914,
                            72238,71547,69001,71541,72924,71821,71507,69947,71835,68865,
                            70584,71944,72502,71071,68027,59702,46773,43553,34142,48256  # 70-79 y
                            ])
        elif self.year==2021: # 2021
            demog=np.array([60010,58962,
                            59346,60202,61418,60807,63493,65545,68255,70644,70940,73867,
                            73108,74176,72525,72665,69069,69961,71793,73834,74911,74135,
                            71000,70266,69537,69538,69967,70290,68712,65438,59537,61446,
                            63072,64970,66136,70723,72295,72466,72638,73732,74237,73240,
                            72530,71808,71008,68512,70924,72256,71120,70779,69117,70892,
                            67904,69425,70729,71211,69548,66465,58191,45498,42220,32996  # 70-79 y
                            ])
        elif self.year==2022: # 2022
            demog=np.array([59053,59130,
                            59279,60618,60970,61957,63864,66611,69224,70499,71756,73225,
                            73263,73142,72331,70554,69302,70768,72657,74273,74148,72875,
                            70428,70052,69253,69946,69885,69391,67453,62272,60554,62657,
                            64086,65398,68726,71510,72553,72653,73342,74180,73819,73280,
                            72557,71583,70011,70038,71981,72099,71773,69992,70419,69742,
                            69305,70808,71716,71087,68964,62606,52253,44339,37813,41724  # 70-79 y
                            ])
        elif self.year==2023: # 2022
            demog=np.array([59053,59130,
                            59279,60618,60970,61957,63864,66611,69224,70499,71756,73225,
                            73263,73142,72331,70554,69302,70768,72657,74273,74148,72875,
                            70428,70052,69253,69946,69885,69391,67453,62272,60554,62657,
                            64086,65398,68726,71510,72553,72653,73342,74180,73819,73280,
                            72557,71583,70011,70038,71981,72099,71773,69992,70419,69742,
                            69305,70808,71716,71087,68964,62606,52253,44339,37813,41724  # 70-79 y
                            ])
        elif self.year==2024: # päivitä, 2022
            demog=np.array([59053,59130,
                            59279,60618,60970,61957,63864,66611,69224,70499,71756,73225,
                            73263,73142,72331,70554,69302,70768,72657,74273,74148,72875,
                            70428,70052,69253,69946,69885,69391,67453,62272,60554,62657,
                            64086,65398,68726,71510,72553,72653,73342,74180,73819,73280,
                            72557,71583,70011,70038,71981,72099,71773,69992,70419,69742,
                            69305,70808,71716,71087,68964,62606,52253,44339,37813,41724  # 70-79 y
                            ])
        else:
            print('Empstats, unknown year',self.year)

        demo_min_age=18
        demo_max_age=79
                 
        demog2=np.zeros((self.n_time,1))
        k2=0
        for k in np.arange(self.min_age,self.max_age,self.timestep):
            ind=min(demo_max_age,int(np.floor(k)))-demo_min_age
            demog2[k2]=demog[ind]
            k2+=1
            
        demog2[-2:]=demog2[-3]
        if scale is not None:
            demog2 /= scale

        return demog2

    def map_ratios(self,ratio,min_age=18,max_age=70):
        emp_ratio=np.zeros(self.n_time)
        for a in range(min_age,max_age):
            emp_ratio[self.map_age(a):self.map_age(a+1)]=ratio[a-min_age]
            
        return emp_ratio

    def map_age(self,age,start_zero=False):
        if start_zero:
            return int((age)*self.inv_timestep)
        else:
            return int((age-self.min_age)*self.inv_timestep)


    def stat_wageratio(self):
        def update(x,vals,newx):
            f = interp1d(x, vals,fill_value='extrapolate')
            newvals=f(newx)
            
            return self.map_ratios(newvals)
    
        x=[18,25,35,45,55,65]
        newx = np.linspace(self.min_age, self.max_age, num=self.max_age-self.min_age+1, endpoint=True)
        men_lowmid=update(x,np.array([0.79,0.74,0.67,0.63,0.61,0.61]),newx)
        men_highmid=update(x,np.array([1.25,1.40,1.51,1.58,1.65,1.65]),newx)
        women_lowmid=update(x,np.array([0.85,0.80,0.74,0.69,0.70,0.71]),newx)
        women_highmid=update(x,np.array([1.21,1.40,1.55,1.68,1.71,1.67]),newx)
        xx=self.map_ratios(newx)
        
        return xx,men_lowmid,men_highmid,women_lowmid,women_highmid
    
    def stat_days(self,scale=False):
        '''
        HTV-tiedot
        '''
        demog2=self.get_demog()

        htv = 6*52
        htv_tt = 21.5*12
        h_to_v = 1.0 / 1860.0

        q={}
        if self.year==2018:
            q['työllisiä']= 4_132_662_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/3465/12.5 # 3_508_270_000 * h_to_v # yritykset, statfin
            q['ansiosidonnaisella']=(31_269_904+7_553_200)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=49_880_321/htv_tt   # Kelan tilasto 31.12.2018
            q['työkyvyttömyyseläke']=198_762
            q['isyysvapaalla']=(1_268_710+155_307)/htv # Kelan tilasto 2018
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=(4_964_669+7_590_429)/htv  # Kelan tilasto 2022, äideille
            #q['pareja']=0
        elif self.year==2019:
            q['työllisiä']= 4_141_593_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/3527/12.5 # 3_512_025_000 * h_to_v  # Kelan tilasto 31.12.2018
            q['ansiosidonnaisella']=(27_858_120+6_972_312)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=48_454_665/htv_tt   # Kelan tilasto 31.12.2019
            q['työkyvyttömyyseläke']=195_316
            q['isyysvapaalla']=(1_271_141+156_927)/htv # Kelan tilasto 2022
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=(4_727_809+7_070_436)/htv  # Kelan tilasto 2022, äideille
            #q['pareja']=0
        elif self.year==2020:
            q['työllisiä']= 4_062_562_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/3653/12.5 # 3_459_030_000 * h_to_v #
            q['ansiosidonnaisella']=(40_448_224+12_425_099)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=52_449_825/htv_tt   # Kelan tilasto 31.12.2020
            q['työkyvyttömyyseläke']=191_597
            q['isyysvapaalla']=(1_287_660+170_034)/htv # Kelan tilasto 2022
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=(4_819_360+7_162_896)/htv  # Kelan tilasto 2022, äideille
            #q['pareja']=0
        elif self.year==2021:
            q['työllisiä']= 4_062_562_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/3738/12.5 # 3_459_030_000 * h_to_v #
            q['ansiosidonnaisella']=(37_549_237+7_553_200)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=49_613_125/htv_tt   # Kelan tilasto 31.12.2021
            q['työkyvyttömyyseläke']=185_991  
            q['isyysvapaalla']=(1_356_711+196_429)/htv # Kelan tilasto 2022, isyysvapaa+vanhempainvapaa
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=(5_084_479+7_311_157)/htv  # Kelan tilasto 2022, äideille
            q['pareja']=0
        elif self.year==2022:
            q['työllisiä']= 4_062_562_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/3848/12.5 # 3_459_030_000 * h_to_v #
            q['ansiosidonnaisella']=(30_676_200+11_611_154)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=49_880_300/htv_tt   # Kelan tilasto 31.12.2018
            q['työkyvyttömyyseläke']=185_991  
            q['isyysvapaalla']=1_424_000/htv # Kelan tilasto 2018
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=12_571_400/htv  # Kelan tilasto 2018, äideille
            #q['pareja']=0
        elif self.year==2023:
            q['työllisiä']= 4_062_562_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/(3848*1.03)/12.5 # 3_459_030_000 * h_to_v #
            q['ansiosidonnaisella']=(30_676_200+7_553_200)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=49_880_300/htv_tt   # Kelan tilasto 31.12.2018
            q['työkyvyttömyyseläke']=185_991  
            q['isyysvapaalla']=1_424_000/htv # Kelan tilasto 2018
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=12_571_400/htv  # Kelan tilasto 2018, äideille
            #q['pareja']=0
        elif self.year==2024: # päivitä
            q['työllisiä']= 4_062_562_000 * h_to_v # yritykset, statfin
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']= self.get_tyotulosumma(self.year)/(3848*1.03*1.01)/12.5 # 3_459_030_000 * h_to_v #
            q['ansiosidonnaisella']=(30_676_200+7_553_200)/htv_tt  # Kelan tilasto 31.12.2018
            q['tmtuella']=49_880_300/htv_tt   # Kelan tilasto 31.12.2018
            q['työkyvyttömyyseläke']=185_991  
            q['isyysvapaalla']=1_424_000/htv # Kelan tilasto 2018
            q['kotihoidontuella']=42_042  # saajia Kelan tilasto 2018
            q['vanhempainvapaalla']=12_571_400/htv  # Kelan tilasto 2018, äideille
            #q['pareja']=0

        return q    

    def stat_participants(self,scale=False,lkm=False):
        '''
        Lukumäärätiedot (EI HTV!)
        '''
        demog2=self.get_demog()

        h_to_v=1.0 / 1860.0

        q={}
        if self.year==2018:
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_540_000 # TK
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018 # vuoden aikana 339 680
            q['tmtuella']=189_780  # Kelan tilasto 31.12.2018 # vuoden aikana 268 254
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=95_759 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=198_762
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=109076+111441
            q['ovella']=39_000
            q['pareja']=1_280_698
            q['lapsiperheitä']=561965
        elif self.year==2019:
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_566_000 # TK
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=89_663 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=195_316
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=114433+109652
            q['ovella']=39_000
            q['pareja']=1278825
            q['lapsiperheitä']=558302
        elif self.year==2020:
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_528_000 # TK
            q['työssä yli 63v']=86_000 # ETK 2020
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018
            q['tmtuella']=189_780  # Kelan tilasto 31.12.2018
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=86_614 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=191_597
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=126153+118325
            q['ovella']=39_000
            q['pareja']=1279182
            q['lapsiperheitä']=556052
        elif self.year==2021:
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_528_000 # TK
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018 # vuoden aikana 355 729
            q['tmtuella']=189_780  # Kelan tilasto 31.12.2018
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=82_386 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=185_991  
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=126153+118325
            q['ovella']=39_000
            q['pareja']=1278528
            q['lapsiperheitä']=553613
        elif self.year==2022:
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_528_000 # TK
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018
            q['tmtuella']=189_780  # Kelan tilasto 31.12.2018
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=79_880 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=185_991  
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=126153+118325
            q['ovella']=39_000
            q['pareja']=1276202
            q['lapsiperheitä']=552034
        elif self.year==2023:
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_528_000 # TK
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018
            q['tmtuella']=189_780  # Kelan tilasto 31.12.2018
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=79_880 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=185_991  
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=126153+118325
            q['ovella']=39_000
            q['pareja']=1276202
            q['lapsiperheitä']=552034
        elif self.year==2024: # päivitä
            aikuisia = np.sum(np.sum(demog2))*self.timestep
            lapsia = 1_049_041  # v2019
            q['yhteensä'] = aikuisia + lapsia
            q['aikuisia'] = aikuisia
            q['lapsia'] = lapsia
            q['työllisiä']=2_528_000 # TK
            q['työssä ja eläkkeellä']=31_000 # ETK 2020
            q['työssä yli 63v']=86_000 # ETK 2020
            q['palkansaajia']=2_204_000 # TK
            q['ansiosidonnaisella']=116_972+27_157  # Kelan tilasto 31.12.2018
            q['tmtuella']=189_780  # Kelan tilasto 31.12.2018
            q['isyysvapaalla']=59_640 # Kelan tilasto 2018
            q['kotihoidontuella']=79_880 # saajia Kelan tilasto 2018
            q['työkyvyttömyyseläke']=185_991  
            q['vanhempainvapaalla']=84_387 # Kelan tilasto 2018
            q['opiskelijoita']=126153+118325
            q['ovella']=39_000
            q['pareja']=1276202
            q['lapsiperheitä']=552034
        
        return q
        
    def get_tyotulosumma(self,y: int):
        if y==2018:
            return 89_134_200_000
        elif y==2019:
            return 92_354_100_000
        elif y==2020:
            return 92_123_100_000
        elif y==2021:
            return 96_602_200_000
        elif y==2022:
            return 102_480_300_000
        elif y==2023:
            return 102_480_300_000*1.03
        elif y==2024:
            return 102_480_300_000*1.03*1.01

    def stat_budget(self,scale=False):
        q={}
        if self.year==2018:
            q['tyotulosumma']=self.get_tyotulosumma(self.year) #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=5_542_000_000
            q['kunnallisvero']=18_991_000_000 # 18_791_000_000 ?
            q['ptel']=5_560_000_000 # vai 6_804_000_000
            q['tyoelakemaksu']=26_437_800_000 # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=1_335_000_000+407_000_000
            q['ylevero']=497_000_000
            q['ansiopvraha']=1_930_846_464 # Kelasto
            q['peruspvraha']=1_964_486_581 # Kelasto
            q['asumistuki']=1_488_900_000 + 600_100_000 # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=27_865_000_000
            q['kansanelakemeno']=2_099_444_514 # vain kansaneläkemeno (ml ve ja tk) ilman perhe-eläkkeitä
            q['takuuelakemeno']=214_107_376
            q['kokoelakemeno']=q['tyoelakemeno']+2_357_000_000
            q['elatustuki']=206_977_000
            q['lapsilisa']=1_369_269_187
            q['opintotuki']=417_404_073+54_057
            q['isyyspaivaraha']=115_794_328
            q['aitiyspaivaraha']=793_118_094
            q['kotihoidontuki']=277_643_734
            q['sairauspaivaraha']=835_761_522
            q['toimeentulotuki']=715_950_847
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000
            q['alv']=18_020_000_000 # 21_364_000_000
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea
        elif self.year==2019:
            q['tyotulosumma']=self.get_tyotulosumma(self.year) #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=5_542_000_000
            q['kunnallisvero']=19_376_000_000
            q['ptel']=6_159_800_000 # vai 7_323_000_000
            q['tyoelakemaksu']=27_598_800_000 #23_150_000_000 # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=1_335_000_000+407_000_000
            q['ylevero']=497_000_000
            q['ansiopvraha']=1_720_759_809 # Kelasto 
            q['peruspvraha']=1_869_864_476 # Kelasto
            q['asumistuki']=1_490_952_605 + 616_199_681 # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=29_045_300_000
            q['kansanelakemeno']=2_054_030_972
            q['takuuelakemeno']=230_809_165
            q['elatustuki']=208_633_460
            q['lapsilisa']=1_358_971_519
            q['opintotuki']=417_404_073+54_057
            q['isyyspaivaraha']=118_477_043
            q['aitiyspaivaraha']=767_134_967
            q['kotihoidontuki']=253_877_650
            q['sairauspaivaraha']=875_502_895
            q['toimeentulotuki']=698_430_807	
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000
            q['alv']=18_786_000_000 # Lähde: ?
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea
        elif self.year==2020:
            q['tyotulosumma']=self.get_tyotulosumma(self.year) #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=5_542_000_000 # vai 7_700_000_000
            q['kunnallisvero']=20_480_000_000
            q['ptel']=6_486_150_000
            q['tyoelakemaksu']=26_896_700_000 # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=1_335_000_000+407_000_000
            q['ylevero']=497_000_000
            q['ansiopvraha']=2_692_412_893 # Kelasto
            q['peruspvraha']=2_264_825_365 # Kelasto
            q['asumistuki']=1_566_478_510 + 636_232_831 # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=29_784_800_000
            q['kansanelakemeno']=2_211_425_285
            q['takuuelakemeno']=262_146_342
            q['elatustuki']=215_555_923
            q['lapsilisa']=1_375_073_409
            q['opintotuki']=417_404_073+54_057
            q['isyyspaivaraha']=123_821_560
            q['aitiyspaivaraha']=807_571_301
            q['kotihoidontuki']=237_024_837
            q['sairauspaivaraha']=818_657_072
            q['toimeentulotuki']=784_025_858	
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000
            q['alv']=19_354_000_000 #21_775_000_000
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea
        elif self.year==2021:
            q['tyotulosumma']=self.get_tyotulosumma(self.year) # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=6_006_507_551 # vai 7_700_000_000
            q['kunnallisvero']=21_017_113_723
            q['ptel']=6_816_800_000
            q['tyoelakemaksu']=29_030_800_000 # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=1_266_864_206+989_752_446
            q['ylevero']=522_675_066
            q['ansiopvraha']=2_482_485_746 # Kelasto
            q['peruspvraha']=2_154_726_201 # Kelasto
            q['asumistuki']=1_590_774_842 + 646_939_420 # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=30_544_500_000
            q['kansanelakemeno']=2_158_018_883
            q['takuuelakemeno']=264_453_403
            q['elatustuki']=213_640_966
            q['lapsilisa']=1_362_112_599
            q['opintotuki']=417_404_073+54_057
            q['isyyspaivaraha']=134_378_695
            q['aitiyspaivaraha']=862_794_683	
            q['kotihoidontuki']=208_004_490
            q['sairauspaivaraha']=855_555_940	
            q['toimeentulotuki']=686_452_825	
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000
            q['alv']=20_217_000_000 #21_775_000_000
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea
        elif self.year==2022:
            q['tyotulosumma']=self.get_tyotulosumma(self.year) # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=6_006_507_551 # vai 7_700_000_000
            q['kunnallisvero']=21_017_113_723
            q['ptel']=6_816_800_000
            q['tyoelakemaksu']=30_439_600_000 # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=1_266_864_206+989_752_446
            q['ylevero']=522_675_066
            q['ansiopvraha']=1_840_034_600 # 1_930_846_464+1_964_486_581 # ansioturva + perusturva = 3 895 333 045
            q['peruspvraha']=1_843_804_553 # Kelasto
            q['asumistuki']=1_565_008_002 + 650_228_976 # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=31_449_600_000
            q['kansanelakemeno']=2_167_992_823
            q['takuuelakemeno']=273_173_956
            q['elatustuki']=210_137_558
            q['lapsilisa']=1_460_295_266
            q['opintotuki']=417_404_073+54_057
            q['isyyspaivaraha']=149_559_776
            q['aitiyspaivaraha']=850_374_956
            q['kotihoidontuki']=198_714_946
            q['sairauspaivaraha']=883_920_774
            q['toimeentulotuki']=678_391_090
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000
            q['alv']=20_217_000_000 #21_775_000_000
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea
        elif self.year==2023:
            kerroin=1.03
            q['tyotulosumma']=self.get_tyotulosumma(self.year) #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=17_000_000_000 # ok?
            q['kunnallisvero']=8_000_000_000 # ok?
            q['ptel']=6_816_800_000
            q['tyoelakemaksu']=30_439_600_000*kerroin # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=(1_266_864_206+989_752_446)*kerroin
            q['ylevero']=522_675_066*kerroin
            q['ansiopvraha']=1_840_034_600*kerroin # 1_930_846_464+1_964_486_581 # ansioturva + perusturva = 3 895 333 045
            q['peruspvraha']=1_843_804_553*kerroin # Kelasto
            q['asumistuki']=(1_565_008_002 + 650_228_976)*kerroin # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=31_449_600_000*kerroin
            q['kansanelakemeno']=2_167_992_823*kerroin
            q['takuuelakemeno']=273_173_956*kerroin
            q['elatustuki']=210_137_558*kerroin
            q['lapsilisa']=1_460_295_266*kerroin
            q['opintotuki']=(417_404_073+54_057)*kerroin
            q['isyyspaivaraha']=149_559_776*kerroin
            q['aitiyspaivaraha']=850_374_956*kerroin
            q['kotihoidontuki']=245_768_701*kerroin
            q['sairauspaivaraha']=1_039_110_731*kerroin
            q['toimeentulotuki']=715_950_847*kerroin
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000*kerroin
            q['alv']=20_217_000_000*kerroin #21_775_000_000
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea                        
        elif self.year==2024: # update
            kerroin=1.03*1.01
            q['tyotulosumma']=self.get_tyotulosumma(self.year) #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['tyotulosumma eielakkeella']=np.nan #+4_613_400_000+1_239_900_000 # lähde: ETK, tyel + julkinen + yel + myel
            q['etuusmeno']=0
            q['verot+maksut']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['verot+maksut+alv']=0   # tuloverot 30_763_000_000 ml YLE ja kirkollisvero
            q['valtionvero']=17_000_000_000 # ok?
            q['kunnallisvero']=8_000_000_000 # ok?
            q['ptel']=6_816_800_000
            q['tyoelakemaksu']=30_439_600_000*kerroin # Lähde: ETK
            q['tyottomyysvakuutusmaksu']=0.019*q['tyotulosumma']
            q['sairausvakuutusmaksu']=(1_335_000_000+407_000_000)*kerroin
            q['ylevero']=497_000_000*kerroin
            q['ansiopvraha']=1_840_034_600*kerroin # 1_930_846_464+1_964_486_581 # ansioturva + perusturva = 3 895 333 045
            q['peruspvraha']=1_843_804_553*kerroin # Kelasto
            q['asumistuki']=(1_565_008_002 + 650_228_976)*kerroin # yleinen plus eläkkeensaajan
            q['tyoelakemeno']=31_449_600_000*kerroin
            q['kansanelakemeno']=2_167_992_823*kerroin
            q['takuuelakemeno']=273_173_956*kerroin
            q['elatustuki']=210_137_558*kerroin
            q['lapsilisa']=1_460_295_266*kerroin
            q['opintotuki']=(417_404_073+54_057)*kerroin
            q['isyyspaivaraha']=149_559_776*kerroin
            q['aitiyspaivaraha']=850_374_956*kerroin
            q['kotihoidontuki']=245_768_701*kerroin
            q['sairauspaivaraha']=1_039_110_731*kerroin
            q['toimeentulotuki']=715_950_847*kerroin
            if self.include_perustulo:
                q['perustulo']=0
            q['pvhoitomaksu']=271_000_000*kerroin
            q['alv']=20_217_000_000*kerroin #21_775_000_000
            q['ta_maksut']=0.2057*q['tyotulosumma'] # karkea                                                   

        q['tyottomyyspvraha']=q['ansiopvraha']+q['peruspvraha']
        q['kokoelakemeno']=q['tyoelakemeno']+q['kansanelakemeno']+q['takuuelakemeno']
        q['etuusmeno']=q['tyottomyyspvraha']+q['kokoelakemeno']+q['opintotuki']+q['isyyspaivaraha']+\
            q['aitiyspaivaraha']+q['sairauspaivaraha']+q['toimeentulotuki']+\
            q['asumistuki']+q['kotihoidontuki']+q['elatustuki']+q['lapsilisa']#+q['perustulo']+\
        q['verotettava etuusmeno']=q['kokoelakemeno']+q['tyottomyyspvraha']+q['aitiyspaivaraha']+q['isyyspaivaraha']
            
        #q['etuusmeno_v2']=q['etuusmeno']
        q['verot+maksut']=q['valtionvero']+q['kunnallisvero']+q['ptel']+q['tyottomyysvakuutusmaksu']+\
            q['ylevero']+q['sairausvakuutusmaksu']
        q['verot+maksut+alv']=q['verot+maksut']+q['alv']
        q['palkkaverot+maksut']=np.nan

        q['nettotulot']=q['tyotulosumma']+q['etuusmeno']-q['verot+maksut+alv']-q['pvhoitomaksu']
        #q['tulot_netto_v2']=q['tyotulosumma']+q['etuusmeno']-q['verot+maksut+alv']-q['pvhoitomaksu']
        q['muut tulot']=q['etuusmeno']-q['verot+maksut+alv']

        return q        
        
    def get_emtr(self):
        ''' 
        ETLAn data
        '''
        x_ptr=np.array([8.8,9.6,10.4,11.2,12,12.8,13.6,14.4,15.2,16,16.8,17.6,18.4,19.2,20,20.8,21.6,22.4,23.2,24,24.8,25.6,26.4,27.2,28,28.8,29.6,30.4,31.2,32,32.8,33.6,34.4,35.2,36,36.8,37.6,38.4,39.2,40,40.8,41.6,42.4,43.2,44,44.8,45.6,46.4,47.2,48,48.8,49.6,50.4,51.2,52,52.8,53.6,54.4,55.2,56,56.8,57.6,58.4,59.2,60,60.8,61.6,62.4,63.2,64,64.8,65.6,66.4,67.2,68,68.8,69.6,70.4,71.2,72,72.8,73.6,74.4,75.2,76,76.8,77.6,78.4,79.2,80,80.8,81.6,82.4,83.2,84,84.8,85.6,86.4,87.2,88,88.8,89.6,90.4,91.2,92,92.8,93.6,94.4,95.2,96,96.8,97.6,98.4,99.2,100])
        ptr=np.array([0.000525366,0,0,0.000262683,0.000262683,0.000262683,0,0,0.000788049,0.000525366,0.000262683,0.001576098,0.001313415,0.00262683,0.00525366,0.008668539,0.010244637,0.009456588,0.01313415,0.019963907,0.015760979,0.021540005,0.021802688,0.022590737,0.023116103,0.034936838,0.037563668,0.039927815,0.049909768,0.054900745,0.059366356,0.074864653,0.087736119,0.110064173,0.12030881,0.121622225,0.117419297,0.131866862,0.134756375,0.143950279,0.152093452,0.159973942,0.166541017,0.187818339,0.24849811,1.158694676,1.153441016,1.683009927,1.833001915,1.669087728,1.369103752,1.257200798,1.108259541,0.968774873,0.876047777,0.878674607,0.916500957,0.941718525,1.003449028,0.940667793,0.971664386,0.92727096,0.937252914,0.969037556,0.950649746,0.977968777,0.978494143,0.958792919,0.964571945,0.989526829,1.218849081,1.491514026,2.494437688,3.807589962,5.078712958,7.660098716,10.51940308,8.477568186,4.591436009,3.597180886,3.236517139,3.043707823,2.09778637,1.662520653,1.348877162,1.197046392,1.071221239,0.985061218,0.85529582,0.815105323,0.756527016,0.672731141,0.554261112,0.449713282,0.364341309,0.29236617,0.25375177,0.199376391,0.18177663,0.146839792,0.124249055,0.112165637,0.102446367,0.115843199,0.125825153,0.1281893,0.111377588,0.082745142,0.055951477,0.034936838,0.025742933,0.011295369,0.007355124,0.006041709,0.037300985])/100
        x_emtr=np.array([10.8,11.6,12.4,13.2,14,14.8,15.6,16.4,17.2,18,18.8,19.6,20.4,21.2,22,22.8,23.6,24.4,25.2,26,26.8,27.6,28.4,29.2,30,30.8,31.6,32.4,33.2,34,34.8,35.6,36.4,37.2,38,38.8,39.6,40.4,41.2,42,42.8,43.6,44.4,45.2,46,46.8,47.6,48.4,49.2,50,50.8,51.6,52.4,53.2,54,54.8,55.6,56.4,57.2,58,58.8,59.6,60.4,61.2,62,62.8,63.6,64.4,65.2,66,66.8,67.6,68.4,69.2,70,70.8,71.6,72.4,73.2,74,74.8,75.6,76.4,77.2,78,78.8,79.6,80.4,81.2,82,82.8,83.6,84.4,85.2,86,86.8,87.6,88.4,89.2,90])
        emtr=np.array([0.241111149,0.231445805,0.342989099,0.251821395,0.240327472,0.794125561,1.524773322,0.865440126,0.673178148,0.494238671,0.415609792,0.394450525,0.451397687,0.63869638,0.656459715,1.024265238,0.896003511,0.73012531,0.642092312,0.461846708,0.359968757,0.31268694,0.287348065,0.262792866,0.273503113,0.266450024,0.30798488,0.352654443,0.537602107,0.525846958,0.795431688,1.518503909,1.667141226,1.980873068,2.304531479,3.211245236,3.068877331,2.125330777,1.08878794,1.326241931,0.92343219,1.176820938,2.000464981,4.848084303,4.638581441,6.747977461,6.3859189,6.227093788,3.312861961,2.492875074,3.082461058,3.310772156,1.682814757,0.940673074,0.63112084,0.840884928,0.756247861,0.771137715,1.136592209,0.714190554,0.733782467,0.610484025,0.399152584,0.258874484,0.196180361,0.145502611,0.126433148,0.119902511,0.115200451,0.125388246,0.233274383,0.154384278,0.218123304,0.390009691,0.374074935,0.250254042,0.212637568,0.2160335,0.173714966,0.117290256,0.079412556,0.07627785,0.08385339,0.076539075,0.083592164,0.092735057,0.077061526,0.07105334,0.062955349,0.05067775,0.049632848,0.048587945,0.053290005,0.047804269,0.038922601,0.039967504,0.038661376,0.031869513,0.029518483,0.025861326])/100
        
        return x_ptr,ptr,x_emtr,emtr
        
    def get_mortdata(self,g: int):
        '''
        Työvoimassa olevat ilman vanhempainvapailla olevia
        Lähde: Tilastokeskus
        päivitä
        '''
        x=np.array([18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112])
        if self.year==2018: # 2020 päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        elif self.year==2019: # 2020, päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        elif self.year==2020: # 2020, päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        elif self.year==2021: # 2019, päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        elif self.year==2022: # 2019, päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        elif self.year==2023: # 2019, päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        elif self.year==2024: # 2019, päivitä
            if g==0: # miehet
                emp_ratio=np.array([0.000759645,0.00112138,0.001772504,0.002315108,0.0031471,0.003834397,0.004467435,0.005299427,0.006258026,0.007090018,0.007867749,0.008573134,0.009224258,0.010020076,0.010960589,0.011955362,0.012841614,0.013944908,0.014993941,0.016187668,0.017218615,0.018448516,0.019714591,0.021306227,0.023096819,0.024796976,0.026732261,0.028504766,0.030711353,0.032899853,0.035359656,0.037946065,0.040767603,0.044059397,0.047586319,0.051529237,0.056412668,0.061585487,0.06730091,0.073631283,0.079853135,0.087612364,0.095715242,0.104035161,0.113802022,0.124672177,0.136555192,0.14852864,0.161713903,0.176689757,0.193166814,0.21043969,0.230262801,0.251695636,0.274937148,0.299734124,0.327696287,0.349888766,0.372189766,0.392917217,0.417442891,0.443433594,0.472679918,0.504530738,0.53766572,0.569154805,0.603573948,0.63889743,0.672647362,0.708242146,0.745790302,0.782108557,0.818752374,0.853822641,0.882978531,0.909421404,0.932355441,0.951617863,0.967407622,0.978549078,0.986380654,0.991824775,0.995152743,0.996943334,0.998173235,0.99898714,0.999529744,0.999746785,0.999855306,0.999909566,0.99994574,0.999981913,1,1,1])
            elif g==1: # naiset
                emp_ratio=np.array([0.000437238,0.000510111,0.000692294,0.001020222,0.001639643,0.001894698,0.002186191,0.002550556,0.00313354,0.003570778,0.003898707,0.004299508,0.004773183,0.005246857,0.005866278,0.006303516,0.006922937,0.00761523,0.008198215,0.008926945,0.009546365,0.010202223,0.010821643,0.011550373,0.012752778,0.013554381,0.014793223,0.015886318,0.017380215,0.018400437,0.019894334,0.021679723,0.023319366,0.025214064,0.027509565,0.03016943,0.033157224,0.036873747,0.040153033,0.044306795,0.048132629,0.053707415,0.058589907,0.064747677,0.070286027,0.077099654,0.08496994,0.093605393,0.102896702,0.113281108,0.125705957,0.13904172,0.153397704,0.168810348,0.18695573,0.205902715,0.22860266,0.245181272,0.262852979,0.281144106,0.302969576,0.327017672,0.352486792,0.382109674,0.413627255,0.445654946,0.481763527,0.52034979,0.558170887,0.599052651,0.644270359,0.688795773,0.736090363,0.783384952,0.822772818,0.859828748,0.893168154,0.922718164,0.946183276,0.964547276,0.977409364,0.986554928,0.991874658,0.994862452,0.997012206,0.998323921,0.999234833,0.999562762,0.999744944,0.999854254,0.99989069,0.999963563,1,1,1])
            else: # miehet
                emp_ratio=np.array([0.001077431,0.00172389,0.002837236,0.003591438,0.004632955,0.005746301,0.006715989,0.008008907,0.009337739,0.010558828,0.011779917,0.012785519,0.01361155,0.014724896,0.015981899,0.017526217,0.018675478,0.020183882,0.021692286,0.023344347,0.024780922,0.026576641,0.028480103,0.030922281,0.03329263,0.035878466,0.038500215,0.040942393,0.043851458,0.047191495,0.050603362,0.053979313,0.05796581,0.062634679,0.067375377,0.072582962,0.079334866,0.085943112,0.094059762,0.102535555,0.111119092,0.121031461,0.132308576,0.142759661,0.15669444,0.171562994,0.187401235,0.202664847,0.219688263,0.239189772,0.259660968,0.280814538,0.306026433,0.333393191,0.361657808,0.392220945,0.425369918,0.45309582,0.479959776,0.503088637,0.530275822,0.558181296,0.591150697,0.625197529,0.659926735,0.69088493,0.723638845,0.755746301,0.785483408,0.815866973,0.845855481,0.874084183,0.900229852,0.92325097,0.942321506,0.958303405,0.970981181,0.980103433,0.988327826,0.992350237,0.995223387,0.997019106,0.998383853,0.998994397,0.999317627,0.999640856,0.999820428,0.999928171,0.999964086,0.999964086,1,1,1,1,1])
        else:
            print('Empstats, unknown year',self.year)

        return self.map_ratios(emp_ratio)

    def get_tyollisyysaste_tyossakayntitutkimus(self,year,g=0):
        '''
        Joulukuun tiedot TK:n työssäkäyntitutkimuksesta
        '''
        if self.year==2018: # 
            if g==0: # yhteensä
                emp_ratio=75.8
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2019: 
            if g==0: # yhteensä
                emp_ratio=76.6
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2020: 
            if g==0: # yhteensä
                emp_ratio=74.9
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2021: 
            if g==0: # yhteensä
                emp_ratio=77.7
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2022: 
            if g==0: # yhteensä
                emp_ratio=78.4
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2023: # 2022, päivitä
            if g==0: # yhteensä
                emp_ratio=77.6
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2024: # 2022, päivitä
            if g==0: # yhteensä
                emp_ratio=np.nan
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        else:
            print('Empstats, unknown year',self.year)

        return emp_ratio

    def get_tyottomyyssaste_tyossakayntitutkimus(self,year,g=0):
        '''
        Joulukuun tiedot TK:n työssäkäyntitutkimuksesta
        20-64 vuotiaat
        '''
        if self.year==2018: # 
            if g==0: # yhteensä
                emp_ratio=6.6
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2019: 
            if g==0: # yhteensä
                emp_ratio=6.7
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2020: 
            if g==0: # kaikki
                emp_ratio=8.1
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2021: 
            if g==0: # kaikki
                emp_ratio=6.9
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2022: 
            if g==0: # kaikki
                emp_ratio=6.9
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2023: # 2022, päivitä
            if g==0: # kaikki
                emp_ratio=7.6
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        elif self.year==2024: # 2022, päivitä
            if g==0: # kaikki
                emp_ratio=np.nan
            elif g==1: # naiset
                emp_ratio=np.nan
            else: # miehet
                emp_ratio=np.nan
        else:
            print('Empstats, unknown year',self.year)

        return emp_ratio        

    def get_tyollisyysaste_tyovoimatutkimus(self,year,g=0):
        if self.year==2018: # 
            if g==0: # yhteensä
                emp_ratio=75.1
            elif g==1: # naiset
                emp_ratio=73.5
            else: # miehet
                emp_ratio=76.7
        elif self.year==2019: 
            if g==0: # yhteensä
                emp_ratio=75.9
            elif g==1: # naiset
                emp_ratio=74.6
            else: # miehet
                emp_ratio=77.2
        elif self.year==2020: 
            if g==0: # miehet
                emp_ratio=75.2
            elif g==1: # naiset
                emp_ratio=74.0
            else: # miehet
                emp_ratio=76.5
        elif self.year==2021: 
            if g==0: # miehet
                emp_ratio=76.6
            elif g==1: # naiset
                emp_ratio=75.8
            else: # miehet
                emp_ratio=77.4
        elif self.year==2022: 
            if g==0: # miehet
                emp_ratio=78.1
            elif g==1: # naiset
                emp_ratio=77.7
            else: # miehet
                emp_ratio=78.5
        elif self.year==2023: # 2022, päivitä
            if g==0: # miehet
                emp_ratio=78.1
            elif g==1: # naiset
                emp_ratio=77.7
            else: # miehet
                emp_ratio=78.5
        elif self.year==2024: # 2022, päivitä
            if g==0: # miehet
                emp_ratio=78.1
            elif g==1: # naiset
                emp_ratio=77.7
            else: # miehet
                emp_ratio=78.5
        else:
            print('Empstats, unknown year',self.year)

        return emp_ratio

    def get_tyottomyysaste_tyovoimatutkimus(self,year,g=0):
        if self.year==2018: # 
            if g==0: # yhteensä
                emp_ratio=6.9
            elif g==1: # naiset
                emp_ratio=6.5
            else: # miehet
                emp_ratio=7.3
        elif self.year==2019: 
            if g==0: # yhteensä
                emp_ratio=6.1
            elif g==1: # naiset
                emp_ratio=5.5
            else: # miehet
                emp_ratio=6.7
        elif self.year==2020: 
            if g==0: # yhteensä
                emp_ratio=7.1
            elif g==1: # naiset
                emp_ratio=6.6
            else: # miehet
                emp_ratio=7.6
        elif self.year==2021: 
            if g==0: # yhteensä
                emp_ratio=7.1
            elif g==1: # naiset
                emp_ratio=6.3
            else: # miehet
                emp_ratio=7.8
        elif self.year==2022: 
            if g==0: # yhteensä
                emp_ratio=6.3
            elif g==1: # naiset
                emp_ratio=5.7
            else: # miehet
                emp_ratio=6.9
        elif self.year==2023: # 2022, päivitä
            if g==0: # yhteensä
                emp_ratio=6.3
            elif g==1: # naiset
                emp_ratio=5.7
            else: # miehet
                emp_ratio=6.9
        elif self.year==2024: # 2022, päivitä
            if g==0: # yhteensä
                emp_ratio=6.3
            elif g==1: # naiset
                emp_ratio=5.7
            else: # miehet
                emp_ratio=6.9
        else:
            print('Empstats, unknown year',self.year)

        return emp_ratio

    def stats_parttimework(self):
        if self.year==2018: 
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([52.5,21.8,15.8,11.8,19.3,75])
            m_osatyo=np.array([30.7,9.5,5.5,4.7,13.1,63.0])
        elif self.year==2019: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([54.5,22.4,17.4,12.9,18.8,73.3])
            m_osatyo=np.array([32.2,8.8,5.7,4.4,13.0,64.6])
        elif self.year==2020: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([51.7,21.8,15.8,11.7,17.7,69.2])
            m_osatyo=np.array([32.2,9.2,5.7,5.6,12.7,63.3])
        elif self.year==2021: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([58.5,22.1,19.3,14.4,19.7,70.0])
            m_osatyo=np.array([32.6,10.6,5.7,6.3,12.7,65.5])
        elif self.year==2022: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([57.7,22.1,17.7,14.4,19.8,69.2])
            m_osatyo=np.array([36.3,9.4,6.2,5.6,12.8,63])
        elif self.year==2023: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([57.7,22.1,17.7,14.4,19.8,69.2])
            m_osatyo=np.array([36.3,9.4,6.2,5.6,12.8,63])
        elif self.year==2024: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([57.7,22.1,17.7,14.4,19.8,69.2])
            m_osatyo=np.array([36.3,9.4,6.2,5.6,12.8,63])
        elif self.year==2025: # 2022, päivitä
            o_x=np.array([20,30,40,50,60,70])
            f_osatyo=np.array([57.7,22.1,17.7,14.4,19.8,69.2])
            m_osatyo=np.array([36.3,9.4,6.2,5.6,12.8,63])
        else:
            print('Empstats, unknown year',self.year)

        return o_x,m_osatyo,f_osatyo

    def children_ages(self):
        return np.array([[1.80000e+01, 1.51000e+02],
            [1.90000e+01, 2.81510e+02],
            [2.00000e+01, 4.85510e+02],
            [2.10000e+01, 6.64000e+02],
            [2.20000e+01, 8.78490e+02],
            [2.30000e+01, 1.10750e+03],
            [2.40000e+01, 1.43500e+03],
            [2.50000e+01, 1.88702e+03],
            [2.60000e+01, 2.27851e+03],
            [2.70000e+01, 2.70902e+03],
            [2.80000e+01, 3.24054e+03],
            [2.90000e+01, 3.56402e+03],
            [3.00000e+01, 3.78851e+03],
            [3.10000e+01, 3.96502e+03],
            [3.20000e+01, 3.73450e+03],
            [3.30000e+01, 3.38901e+03],
            [3.40000e+01, 3.07551e+03],
            [3.50000e+01, 2.77948e+03],
            [3.60000e+01, 2.42900e+03],
            [3.70000e+01, 1.99845e+03],
            [3.80000e+01, 1.72200e+03],
            [3.90000e+01, 1.23900e+03],
            [4.00000e+01, 1.00646e+03],
            [4.10000e+01, 6.76990e+02],
            [4.20000e+01, 4.00450e+02],
            [4.30000e+01, 2.67000e+02],
            [4.40000e+01, 1.47000e+02],
            [4.50000e+01, 7.70000e+01],
            [4.60000e+01, 4.50000e+01],
            [4.70000e+01, 2.50000e+01],
            [4.80000e+01, 7.00000e+00],
            [4.90000e+01, 7.00000e+00],
            [5.00000e+01, 2.00000e+00],
            [5.10000e+01, 1.00000e+00],
            [5.20000e+01, 0.00000e+00],
            [5.30000e+01, 0.00000e+00],
            [5.40000e+01, 2.00000e+00]])

